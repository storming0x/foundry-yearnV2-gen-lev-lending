{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "debtRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "minDebtPerHarvest",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "maxDebtPerHarvest",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "StrategyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "gain",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "loss",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "debtPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalGain",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalLoss",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalDebt",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "debtAdded",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "debtRatio",
          "type": "uint256"
        }
      ],
      "name": "StrategyReported",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "governance",
          "type": "address"
        }
      ],
      "name": "UpdateGovernance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "management",
          "type": "address"
        }
      ],
      "name": "UpdateManagement",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "rewards",
          "type": "address"
        }
      ],
      "name": "UpdateRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "depositLimit",
          "type": "uint256"
        }
      ],
      "name": "UpdateDepositLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "UpdatePerformanceFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "managementFee",
          "type": "uint256"
        }
      ],
      "name": "UpdateManagementFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "UpdateGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "EmergencyShutdown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "queue",
          "type": "address[20]"
        }
      ],
      "name": "UpdateWithdrawalQueue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "debtRatio",
          "type": "uint256"
        }
      ],
      "name": "StrategyUpdateDebtRatio",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "minDebtPerHarvest",
          "type": "uint256"
        }
      ],
      "name": "StrategyUpdateMinDebtPerHarvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "maxDebtPerHarvest",
          "type": "uint256"
        }
      ],
      "name": "StrategyUpdateMaxDebtPerHarvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "StrategyUpdatePerformanceFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldVersion",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newVersion",
          "type": "address"
        }
      ],
      "name": "StrategyMigrated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromQueue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToQueue",
      "type": "event"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "governance",
          "type": "address"
        },
        {
          "name": "rewards",
          "type": "address"
        },
        {
          "name": "nameOverride",
          "type": "string"
        },
        {
          "name": "symbolOverride",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "governance",
          "type": "address"
        },
        {
          "name": "rewards",
          "type": "address"
        },
        {
          "name": "nameOverride",
          "type": "string"
        },
        {
          "name": "symbolOverride",
          "type": "string"
        },
        {
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "governance",
          "type": "address"
        },
        {
          "name": "rewards",
          "type": "address"
        },
        {
          "name": "nameOverride",
          "type": "string"
        },
        {
          "name": "symbolOverride",
          "type": "string"
        },
        {
          "name": "guardian",
          "type": "address"
        },
        {
          "name": "management",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 4546,
      "inputs": [],
      "name": "apiVersion",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "gas": 107044,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 71894,
      "inputs": [
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "setSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 36365,
      "inputs": [
        {
          "name": "governance",
          "type": "address"
        }
      ],
      "name": "setGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37637,
      "inputs": [],
      "name": "acceptGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37775,
      "inputs": [
        {
          "name": "management",
          "type": "address"
        }
      ],
      "name": "setManagement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 38326,
      "inputs": [
        {
          "name": "rewards",
          "type": "address"
        }
      ],
      "name": "setRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 36489,
      "inputs": [
        {
          "name": "degradation",
          "type": "uint256"
        }
      ],
      "name": "setLockedProfitDegradation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37765,
      "inputs": [
        {
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "setDepositLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37899,
      "inputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 37929,
      "inputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "setManagementFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 39173,
      "inputs": [
        {
          "name": "guardian",
          "type": "address"
        }
      ],
      "name": "setGuardian",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 39244,
      "inputs": [
        {
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "setEmergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 1035534,
      "inputs": [
        {
          "name": "queue",
          "type": "address[20]"
        }
      ],
      "name": "setWithdrawalQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 76708,
      "inputs": [
        {
          "name": "receiver",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 116471,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        },
        {
          "name": "receiver",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 38241,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 40282,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 40306,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 81894,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        },
        {
          "name": "expiry",
          "type": "uint256"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "permit",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 4698,
      "inputs": [],
      "name": "totalAssets",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 831055,
      "inputs": [],
      "name": "maxAvailableShares",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "maxShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "maxShares",
          "type": "uint256"
        },
        {
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "maxShares",
          "type": "uint256"
        },
        {
          "name": "recipient",
          "type": "address"
        },
        {
          "name": "maxLoss",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 40934,
      "inputs": [],
      "name": "pricePerShare",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1486089,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        },
        {
          "name": "debtRatio",
          "type": "uint256"
        },
        {
          "name": "minDebtPerHarvest",
          "type": "uint256"
        },
        {
          "name": "maxDebtPerHarvest",
          "type": "uint256"
        },
        {
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 115163,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        },
        {
          "name": "debtRatio",
          "type": "uint256"
        }
      ],
      "name": "updateStrategyDebtRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 42411,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        },
        {
          "name": "minDebtPerHarvest",
          "type": "uint256"
        }
      ],
      "name": "updateStrategyMinDebtPerHarvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 42441,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        },
        {
          "name": "maxDebtPerHarvest",
          "type": "uint256"
        }
      ],
      "name": "updateStrategyMaxDebtPerHarvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 40254,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        },
        {
          "name": "performanceFee",
          "type": "uint256"
        }
      ],
      "name": "updateStrategyPerformanceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 1141408,
      "inputs": [
        {
          "name": "oldVersion",
          "type": "address"
        },
        {
          "name": "newVersion",
          "type": "address"
        }
      ],
      "name": "migrateStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "revokeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "revokeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 1199744,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "addStrategyToQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 23088073,
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "removeStrategyFromQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "debtOutstanding",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "debtOutstanding",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditAvailable",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "creditAvailable",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 10781,
      "inputs": [],
      "name": "availableDepositLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expectedReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "expectedReturn",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 1072156,
      "inputs": [
        {
          "name": "gain",
          "type": "uint256"
        },
        {
          "name": "loss",
          "type": "uint256"
        },
        {
          "name": "_debtPayment",
          "type": "uint256"
        }
      ],
      "name": "report",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sweep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "gas": 8720,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 7773,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2378,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2623,
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2868,
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        },
        {
          "name": "arg1",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2468,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2498,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2528,
      "inputs": [],
      "name": "governance",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2558,
      "inputs": [],
      "name": "management",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2588,
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 10941,
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "strategies",
      "outputs": [
        {
          "name": "performanceFee",
          "type": "uint256"
        },
        {
          "name": "activation",
          "type": "uint256"
        },
        {
          "name": "debtRatio",
          "type": "uint256"
        },
        {
          "name": "minDebtPerHarvest",
          "type": "uint256"
        },
        {
          "name": "maxDebtPerHarvest",
          "type": "uint256"
        },
        {
          "name": "lastReport",
          "type": "uint256"
        },
        {
          "name": "totalDebt",
          "type": "uint256"
        },
        {
          "name": "totalGain",
          "type": "uint256"
        },
        {
          "name": "totalLoss",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2757,
      "inputs": [
        {
          "name": "arg0",
          "type": "uint256"
        }
      ],
      "name": "withdrawalQueue",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2678,
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2708,
      "inputs": [],
      "name": "depositLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2738,
      "inputs": [],
      "name": "debtRatio",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2768,
      "inputs": [],
      "name": "totalDebt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2798,
      "inputs": [],
      "name": "lastReport",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2828,
      "inputs": [],
      "name": "activation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2858,
      "inputs": [],
      "name": "lockedProfit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2888,
      "inputs": [],
      "name": "lockedProfitDegradation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2918,
      "inputs": [],
      "name": "rewards",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2948,
      "inputs": [],
      "name": "managementFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 2978,
      "inputs": [],
      "name": "performanceFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 3223,
      "inputs": [
        {
          "name": "arg0",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "gas": 3038,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "",
  "bytecodeSha1": "3870831851afdec1d93ef4c93dd861ca35fe18ed",
  "compiler": {
    "evm_version": "istanbul",
    "version": "0.2.12"
  },
  "contractName": "Vault",
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "-1:-1:0:-;;;;;:::-;;:::-;:::-;;;;;;;;;;:::-;;;;:::-;8860:2990;;;;;:::-;9029:10;8860:2990;;9068:10;8860:2990;;;:::-;:::-;;;;;;:::-;9068:10;8860:2990;;-1:-1;;;;;8860:2990;:::-;;;;:::-;;;;;;;;:::-;:::-;;;;;;:::-;-1:-1;;;;;8860:2990;:::-;;;;:::-;;;;;-1:-1;;;;;8860:2990;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;-1:-1;;;;;8860:2990;:::-;;;;:::-;-1:-1;;;;;8860:2990;:::-;;;;:::-;-1:-1;;;;;8860:2990;:::-;;;;:::-;-1:-1;;;;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;;;;;;;;;;:::-;;;;:::-;10398:15;:20;;10391:27;:::-;;;;:::-;10463:5;-1:-1;10444:10;:25;10493:2;;;;10477:18;;;;;;;;:12;:18;;;;;;;;;10474:134;;:::-;10517:48;10524:29;;;-1:-1;;;;10538:5;10524:29;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;;;;;;;;10517:48;-1:-1;10517:48;;;;;;10555:9;;;;;;;-1:-1;;;;;;;;;;;;;;;;10517:48;-1:-1;10517:48;;;;;;;;;;;;10505:60;:9;:60;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;10474:134;:::-;:::-;10596:12;10584:24;:9;:24;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;10474:134::-;10634:2;;;;10616:20;;;;;;;;:14;:20;;;;;;;;;10613:137;;:::-;10660:43;10667:4;;;;;;;-1:-1;;;;;;;;;;;;;;;;10660:43;-1:-1;10660:43;;;;;;10673:29;;;-1:-1;;;;10687:5;10673:29;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;;;;;;;;10660:43;-1:-1;10660:43;;;;;;;;;;;;10646:57;:11;:57;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;10613:137;:::-;:::-;10736:14;10722:28;:11;:28;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;10613:137::-;10775:31;;;-1:-1;;;;10789:5;10775:31;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;10755:51;8860:2990;10827:8;-1:-1;10811:13;:24;10858:3;10847:8;:14;;10840:21;:::-;;;;:::-;10910:10;-1:-1;10892:15;:28;10946:10;-1:-1;;10925:32;-1:-1;;;10925:32;10980:10;-1:-1;10962:15;:28;11016:10;-1:-1;;10995:32;-1:-1;;;10995:32;11047:7;-1:-1;11032:12;:22;11077:7;-1:-1;;11059:26;-1:-1;;;11059:26;11106:8;-1:-1;11090:13;:24;11138:8;-1:-1;;11119:28;-1:-1;;;11119:28;11174:4;11152:19;:26;11239:22;;11214:48;11239:22;-1:-1;;11214:48;-1:-1;;;11214:48;11288:3;11267:18;:24;11335:21;;11311:46;11335:21;-1:-1;;11311:46;-1:-1;;;11311:46;11380:15;11362;:33;11418:15;11400;:33;11469:57;11438:28;:88;11608:236;11628:16;11608:236;-1:-1;;11608:236;;;;;;;;11676:13;;;;;;;11658:44;;;;;;;;11608:236;-1:-1;;11608:236;;;;;;;;11734:11;;;;;;;11716:42;;;;;;;;11608:236;-1:-1;;11608:236;;;;;;;;11772:26;11608:236;-1:-1;;11608:236;;;;;;;;11812:22;11608:236;-1:-1;;11608:236;;;;;;;;;;;;;;11589:261;;;;;;;;11565:21;:285;8860:2990;:::-;11869:490;;;;;:::-;12348:11;;;;;;;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;12341:18;-1:-1;;;;;;;;;;;;;;;;;;;;;;;12341:18;;;;;;;;-1:-1;;;;;;;;;;;12341:18;;11869:490::-;12372:249;;;;;:::-;-1:-1;;;;;;;;;;;;;;;;:::-;;;;:::-;12585:15;12571:29;:10;:29;12564:36;:::-;;;;:::-;12617:4;12605:16;:9;:16;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;12372:249;:::-;12634:263;;;;;:::-;-1:-1;;;;;;;;;;;;;;;;:::-;;;;:::-;12857:15;12843:29;:10;:29;12836:36;:::-;;;;:::-;12891:6;12877:20;:11;:20;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;12634:263;:::-;12954:567;;;;;:::-;-1:-1;;;;;12954:567;:::-;;;;:::-;13466:15;13452:29;:10;:29;13445:36;:::-;;;;:::-;13511:10;-1:-1;13486:22;:35;12954:567;:::-;13534:585;;;;;:::-;14027:22;14013:36;:10;:36;14006:43;:::-;;;;:::-;14072:10;14054:15;:28;14108:10;-1:-1;14087:32;-1:-1;;;14087:32;13534:585;:::-;14132:404;;;;;:::-;-1:-1;;;;;14132:404;:::-;;;;:::-;14451:15;14437:29;:10;:29;14430:36;:::-;;;;:::-;14489:10;-1:-1;14471:15;:28;14525:10;-1:-1;;14504:32;-1:-1;;;14504:32;14132:404;:::-;14549:628;;;;;:::-;-1:-1;;;;;14549:628;:::-;;;;:::-;15055:15;15041:29;:10;:29;15034:36;:::-;;;;:::-;15099:4;15087:31;-1:-1;15105:12;15087:31;-1:-1;;;;;;;;;;;;:::-;;;;;;;;15087:7;-1:-1;;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;15082:37;15075:44;:::-;;;;:::-;15139:7;-1:-1;15124:12;:22;15169:7;-1:-1;;15151:26;-1:-1;;;15151:26;14549:628;:::-;15190:427;;;;;:::-;15429:15;15415:29;:10;:29;15408:36;:::-;;;;:::-;15547:23;15532:11;:38;-1:-1;;15525:45;:::-;;;;:::-;15606:11;-1:-1;15575:28;:42;15190:427;:::-;15630:498;;;;;:::-;16049:15;16035:29;:10;:29;16028:36;:::-;;;;:::-;16089:5;-1:-1;16069:17;:25;16122:5;-1:-1;;16099:29;-1:-1;;;16099:29;15630:498;:::-;16141:425;;;;;:::-;16457:15;16443:29;:10;:29;16436:36;:::-;;;;:::-;16491:11;16484:3;:18;-1:-1;;16477:25;:::-;;;;:::-;16529:3;-1:-1;16507:19;:25;16562:3;-1:-1;;16537:29;-1:-1;;;16537:29;16141:425;:::-;16579:339;;;;;:::-;16815:15;16801:29;:10;:29;16794:36;:::-;;;;:::-;16849:7;16842:3;:14;-1:-1;;16835:21;:::-;;;;:::-;16882:3;-1:-1;16861:18;:24;16914:3;-1:-1;;16890:28;-1:-1;;;16890:28;16579:339;:::-;16931:359;;;;;:::-;-1:-1;;;;;16931:359;:::-;;;;:::-;17197:13;-1:-1;17182:46;-1:-1;17212:15;-1:-1;17182:46;-1:-1;;;;;;;;;;;;:::-;;;;;;;;17182:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;17175:53;:::-;;;;:::-;17249:8;-1:-1;17233:13;:24;17281:8;-1:-1;;17262:28;-1:-1;;;17262:28;16931:359;:::-;17303:962;;;;;:::-;-1:-1;;;;;17303:962;:::-;;;;:::-;18071:6;18068:127;;;:::-;18109:13;-1:-1;18094:46;-1:-1;18124:15;-1:-1;18094:46;-1:-1;;;;;;;;;;;;:::-;;;;;;;;18094:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;18087:53;:::-;;;;:::-;18159:36;18068:127::-;:::-;18180:15;18166:29;:10;:29;18159:36;:::-;;;;:::-;18225:6;-1:-1;18200:22;:31;18258:6;-1:-1;;18236:29;-1:-1;;;18236:29;17303:962;:::-;18278:2464;;;;;:::-;-1:-1;;;:::-;;;;;;;;;;:::-;;;;:::-;;;;;;;;;;;;;:::-;;:::-;:::-;19404:15;-1:-1;19389:48;-1:-1;19421:15;-1:-1;19389:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;19389:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;19382:55;:::-;;;;:::-;-1:-1;;19509:75;18278:2464;19589:1116;;;;;;;:::-;19669:1;19648:23;;;;;:::-;;;;:::-;:20;:23;;;;;;-1:-1;19633:9;19643:1;19633:12;;;;;:::-;;;;:::-;;;;:38;19684:5;19690:1;19684:8;;;;;:::-;;;;:::-;;;;:24;;19681:170;;:::-;19805:9;19815:1;19805:12;;;;;:::-;;;;:::-;;;;:28;;19798:35;:::-;;;;:::-;19846:5;:::-;19681:170::-;19955:12;19939:9;19949:1;19939:12;;;;;:::-;;;;:::-;;;;:28;19932:35;;:::-;;;;:::-;20023:1;-1:-1;19984:15;20000:5;20006:1;20000:8;;;;;:::-;;;;:::-;;;;-1:-1;;;;;;;;;;;;;;19984:40;;19977:47;:::-;;;;:::-;20059:5;20034:30;19633:38;20073:482;;;;;;;:::-;20124:5;20130:1;20124:8;;;;;:::-;;;;:::-;;;;:24;;20121:90;;:::-;20185:4;20166:16;:23;20206:5;:::-;20121:90::-;20239:9;20249:1;20239:12;;;;;:::-;;;;:::-;;;;20227:24;:5;20233:1;20227:8;;;;;:::-;;;;:::-;;;;:24;;20224:156;;:::-;20376:4;20357:16;:23;20224:156::-;20402:1;20397:6;:1;:6;-1:-1;;20394:121;;:::-;20528:27;20507:8::-;20394:121::-;20547:5;20553:1;20547:8;;;;;:::-;;;;:::-;;;;20535:20;:5;20541:1;20535:8;;;;;:::-;;;;:::-;;;;:20;20528:27;;:::-;;;;:::-;20073:482;;;;;;;;;;;:::-;:::-;;;20612:16;20605:23;;:::-;;;;:::-;20697:5;20703:1;20697:8;;;;;:::-;;;;:::-;;;;-1:-1;20692:1;20671:23;;;;;:::-;;;;:::-;:20;:23;;;;;;:34;19589:1116::-;;;;;;;;;;;;:::-;:::-;;;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;-1:-1;;;20710:32;18278:2464;:::-;22272:687;;;;;:::-;-1:-1;;;;;22272:687;:::-;;;;:::-;22914:10;-1:-1;;22926:8;-1:-1;;;22936:6;-1:-1;;;22899:44;;;;;;;;;;:::i;:::-;;;22955:4;22948:11;;;;;22272:687::-;22972:1282;;;;;:::-;-1:-1;;;;;22972:1282;:::-;;;;:::-;-1:-1;;;;;22972:1282;:::-;;;;:::-;23918:11;23881:14;23896:6;-1:-1;;;;;;;;23904:10;-1:-1;;;;;;;23881:48;;23877:316;;:::-;23961:14;23976:6;-1:-1;;;;;;;;23984:10;-1:-1;;;;;;;23961:43;23998:6;23961:43;;;-1:-1;;23961:43;:::-;;;;:::-;;;;;;;;23940:64;;24050:9;-1:-1;24013:14;24028:6;-1:-1;;;;;;;;24036:10;-1:-1;;;;;;;24013:46;24183:9;-1:-1;;24150:43;24171:10;24163:6;-1:-1;;;;24150:43;23877:316::-;24213:6;-1:-1;;;24221:8;-1:-1;;;24231:6;-1:-1;;;24198:40;;;;;;;;;;:::i;:::-;;;24250:4;24243:11;;;;;22972:1282::-;24267:653;;;;;:::-;-1:-1;;;;;24267:653;:::-;;;;:::-;24852:6;-1:-1;24814:14;24829:10;-1:-1;;;;;;;24841:7;-1:-1;;;;;;;;24814:44;24897:6;-1:-1;;24863:41;24888:7;-1:-1;24876:10;-1:-1;;;24863:41;24916:4;24909:11;;;;;24267:653::-;24933:686;;;;;:::-;-1:-1;;;;;24933:686;:::-;;;;:::-;25483:14;25498:10;-1:-1;;;;;;;25510:7;-1:-1;25483:45;;;;;;;-1:-1;25483:45;25522:6;25483:45;;;;;-1:-1;;25483:45;:::-;;;;:::-;;;;;;;;;;;25567:14;25582:10;-1:-1;;;;;;;25594:7;-1:-1;;;;;;;;;;25533:70;25558:7;-1:-1;25546:10;-1:-1;;;25533:70;25615:4;25608:11;;;;;24933:686::-;25632;;;;;:::-;-1:-1;;;;;25632:686;:::-;;;;:::-;26182:14;26197:10;-1:-1;;;;;;;26209:7;-1:-1;26182:45;;;;;;;-1:-1;26182:45;26221:6;26182:45;;;-1:-1;;26182:45;:::-;;;;:::-;;;;;;;;;;;26266:14;26281:10;-1:-1;;;;;;;26293:7;-1:-1;;;;;;;;;;26232:70;26257:7;-1:-1;26245:10;-1:-1;;;26232:70;26314:4;26307:11;;;;;25632:686::-;26331:1756;;;;;:::-;-1:-1;;;;;26331:1756;:::-;;;;:::-;-1:-1;;;;;26331:1756;:::-;;;;:::-;-1:-1;;;;;;;;;;;;;;;;:::-;;;;:::-;27037:12;27028:5;:21;27021:28;;:::-;;;;:::-;27083:6;:11;;-1:-1;;:::-;;;:::-;:::-;27108:15;27098:6;:25;-1:-1;;:::-;27076:47;:::-;;;;:::-;27168:11;27180:5;-1:-1;;;;;;;;;27151:35;26331:1756;27228:423;27248:11;;;;;;;-1:-1;;;;;;;;;;;;;;;;27228:423;-1:-1;27228:423;;;;;;27273:21;27228:423;;-1:-1;;27228:423;;;;;;;;27335:292;27363:16;27335:292;-1:-1;;27335:292;;;;;;;;27409:5;27401:23;27335:292;-1:-1;;27335:292;;;;;;;;27454:7;27446:25;27335:292;-1:-1;;27335:292;;;;;;;;27501:6;27493:24;27335:292;-1:-1;;27335:292;;;;;;;;27547:5;27539:23;27335:292;-1:-1;;27335:292;;;;;;;;27592:6;27584:24;27335:292;-1:-1;;27335:292;;;;;;;;;;;;;;27308:333;;;;;;;;27228:423;-1:-1;;27228:423;;;;;;;;;;;;;;27209:448;;;;;;;;27191:466;26331:1756;27743:1;27746:2;27726:23;;;;;27732:9;27726:23;;;;-1:-1;;27726:23;:::-;;;;:::-;-1:-1;;;;;;;;;;;27732:9;-1:-1;;;;;;27726:23;;;;;;;;;;;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;;;27705:54;26331:1756;27802:2;27806;27785:24;;;;;27791:9;27785:24;;;;-1:-1;;27785:24;:::-;;;;:::-;-1:-1;;;;;;;;;;;27791:9;-1:-1;;;;;;27785:24;;;;;;;;;;;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;;;27764:55;26331:1756;27862:2;27866:1;27845:23;;;;;27851:9;27845:23;;;;-1:-1;;27845:23;:::-;;;;:::-;-1:-1;;;;;;;;;;;27851:9;-1:-1;;;;;;27845:23;;;;;;;;;;;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;;;27824:54;26331:1756;27920:5;27890:35;27900:6;27890:26;;;27908:1;27890:26;;;27911:1;27890:26;;;27914:1;27890:26;;;;;;;;;;;;;:35;27883:42;:::-;;;;:::-;27989:6;-1:-1;27956:14;27971:5;-1:-1;;;;;;;;27978:7;-1:-1;;;;;;;;27956:39;28021:5;:9;28029:1;28021:9;;;;-1:-1;;28021:9;:::-;;;;:::-;;;;;;;;28000:11;28012:5;-1:-1;;;;;;;;28000:30;28064:6;-1:-1;;28035:36;28055:7;-1:-1;28048:5;-1:-1;;;;28035:36;28083:4;28076:11;;;;;26331:1756::-;28245:314;;;;;:::-;28540:19;;;;:::i;:::-;;;;28533:26;;;;;;28245:314::-;30167:2756;;;;;:::-;30198:11;30167:2756;;30232:10;30167:2756;;;:::-;:::-;;;;;;:::-;30232:10;30167:2756;;;;;;;;;:::-;:::-;;;;;;:::-;;;;;-1:-1;;;;;30167:2756;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;;;;;:::-;;;;:::-;;;;31931:22;31927:26;;31920:33;:::-;;;;:::-;32010:4;31992:37;-1:-1;32016:12;31992:37;-1:-1;;;;;;;;;;;;:::-;;;;;;;;31992:9;-1:-1;;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;31985:44;;:::-;;;;:::-;32053:7;-1:-1;32035:25;30167:2756;32170:11;32160:6;:21;;32157:275;;:::-;32217:17;:39;32237:19;;;;;;;;;;:::i;:::-;;;;;;;;;;32217:39;;;-1:-1;;32217:39;:::-;;;;:::-;;;;;;;;32270:32;;;-1:-1;;;32291:10;-1:-1;;;32270:32;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;32200:113;;;;;;:::-;;;:::-;:::-;;:::-;;;;;32191:6;:122;32376:56;32157:275::-;:::-;32415:17;32383:49;:19;;;;;;;;;;:::i;:::-;;;;;;;;;;:28;32405:6;32383:28;;;;;-1:-1;;32383:28;:::-;;;;:::-;;;;;;;;-1:-1;;32376:56;:::-;;;;:::-;32495:1;32486:6;:10;;32479:17;:::-;;;;:::-;32699:45;;;;;;;;32726:9;-1:-1;;;32737:6;-1:-1;;;32699:45;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1;32681:63;30167:2756;32830:74;;;;;;;;32859:10;-1:-1;;;32879:10;-1:-1;;32891:4;-1:-1;;32897:6;-1:-1;;;32830:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;32917:6;32910:13;;;;;;;;;30167:2756::-;33804:1025;;;;;:::-;34608:26;;;-1:-1;;;34629:4;-1:-1;;;34608:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;34586:49;;;;;;;;;;;;;;;;;-1:-1;;;34586:49;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1;34568:67;33804:1025;34641:169;;;;;;;:::-;;;34657:20;34641:169;;;;;;;;;34690:8;:24;;34687:46;;:::-;34728:5;:::-;34687:46::-;34742:6;;;34752:58;;;;;;-1:-1;34774:15;34790:8;-1:-1;;;;;;;;;;;;;;;;;34752:58;;;;;;:::i;:::-;;;;;;;;;;34742:68;;;;;-1:-1;;34742:68;:::-;;;;:::-;;;;;;;;;;;34641:169::-;;;;;;;;;;;;:::-;:::-;;;34823:6;34816:13;;;;;;33804:1025::-;36010:6537;;;;;:::-;36049:11;36010:6537;;36087:10;36010:6537;;36122:1;36010:6537;;;:::-;:::-;;;;;;:::-;36087:10;36010:6537;;36122:1;36010:6537;;;;;;;;;:::-;:::-;;;;;;:::-;36122:1;36010:6537;;;;;;-1:-1;;;;;36010:6537;:::-;;;;:::-;;;;;;;;:::-;:::-;;;;;;:::-;;;;;-1:-1;;;;;36010:6537;:::-;;;;:::-;;;;;;;;;;;;:::-;:::-;;:::-;:::-;;;;;:::-;;;;:::-;;;;38622:9;-1:-1;38604:27;36010:6537;38730:7;38719;:18;-1:-1;;38712:25;:::-;;;;:::-;38816:11;38806:6;:21;;38803:69;;:::-;38846:14;38861:10;-1:-1;;;;;;;;38837:6;:35;38803:69::-;38935:14;38950:10;-1:-1;;;;;;;38925:36;:6;:36;-1:-1;;38918:43;:::-;;;;:::-;39025:1;39016:6;:10;;39009:17;:::-;;;;:::-;39077:24;;;;;;;;;;39094:6;-1:-1;;;39077:24;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1;39060:41;36010:6537;39118:26;;;-1:-1;;;39139:4;-1:-1;;;39118:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;39110:34;:5;:34;;39107:3080;42128:59;39107:3080::-;39175:1;39154:22;;39800:1569;;;;;;;:::-;;;39816:20;39800:1569;;;;;;;;;39853:8;:24;;39850:50;;:::-;39895:5;:::-;39850:50::-;39968:26;;;-1:-1;;;39989:4;-1:-1;;;39968:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;39943:51;39850:50;40019:13;40010:22;:5;:22;-1:-1;;40007:48;;:::-;40050:5;:::-;40007:48::-;40119:5;:21;40127:13;40119:21;;;-1:-1;;40119:21;:::-;;;;:::-;;;;;;;;40095:45;39850:50;40489:12;40485:54;-1:-1;40503:15;40519:8;-1:-1;;;;;;;;;;;;;;40485:54;;;;;;:::-;;;:::-;:::-;;:::-;;;;;40470:12;:69;40555:12;:17;;40552:46;;:::-;40590:8;:::-;40552:46::-;40774:41;;;-1:-1;;;40802:12;-1:-1;;;;40774:41;40783:8;40774:41;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;40758:57;39850:50;40849:26;;;-1:-1;;;40870:4;-1:-1;;;40849:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;:42;40878:13;40849:42;;;-1:-1;;40849:42;:::-;;;;:::-;;;;;;;;40828:63;39850:50;40981:1;40974:4;:8;;40971:125;;:::-;41000:5;;;41009:4;41000:13;;;-1:-1;;41000:13;:::-;;;;:::-;;;;;;;;;;;41030:9;;;41043:4;41030:17;;;;;-1:-1;;41030:17;:::-;;;;:::-;;;;;;;;;;;41064:32;;;:::-;;;;;;;;;;;;;;;;:::-;;:::-;:::-;41081:8;-1:-1;;;41091:4;-1:-1;;;41064:32;;;;;;;;:::i;:::-;;;;:::-;;;;;;;;;;;;;-1:-1;;41064:32;;:::-;;:::-;:::-;;;40971:125::-;-1:-1;41281:15;41297:8;-1:-1;;;;;;;;;;;;;41281:48;-1:-1;41281:48;41320:9;41281:48;;;-1:-1;;41281:48;:::-;;;;:::-;;;;;;;;;;;41342:14;;;41360:9;41342:27;;;-1:-1;;41342:27;:::-;;;;:::-;;;;;;;;;;;39800:1569::-;;;;;;;;;;;;:::-;:::-;;;41645:26;;;-1:-1;;;41666:4;-1:-1;;;41645:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;41620:51;39154:22;41691:13;41683:21;:5;:21;;41680:287;;:::-;41726:13;-1:-1;41718:5;:21;41927:40;;;;;;;;;;;;;;;;;;;;;;;;41949:5;:17;41957:9;41949:17;;;;;-1:-1;;41949:17;:::-;;;;:::-;;;;;;;;-1:-1;;41927:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1;41918:6;:49;41680:287::-;42148:7;:29;42159:5;:17;42167:9;42159:17;;;;;-1:-1;;42159:17;:::-;;;;:::-;;;;;;;;42148:29;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;42180:7;42148:39;;;;;;;42135:9;:52;-1:-1;;42128:59;:::-;;;;:::-;42251:16;;;42271:6;42251:26;;;-1:-1;;42251:26;:::-;;;;:::-;;;;;;;;;;;42282:14;42297:10;42282:36;;;;;;;-1:-1;42282:36;42312:6;42282:36;;;-1:-1;;42282:36;:::-;;;;:::-;;;;;;;;;;;42362:6;-1:-1;;42323:46;42348:12;42336:10;-1:-1;;;42323:46;42467:62;;;;;;;;;;42492:10;-1:-1;;;42512:9;-1:-1;;;42523:5;-1:-1;;;42467:62;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;42542:5;42535:12;;;;;;;;;36010:6537::-;42566:228;;;;;:::-;42774:19;42780:13;42774:19;;;:::-;;;;:::-;42780:13;42774:19;:2;:19;-1:-1;;42757:37;;;;;;:::i;:::-;;;;42750:44;;;;;;42566:228::-;43468:2177;;;;;:::-;-1:-1;;;;;43468:2177;:::-;;;;:::-;44379:22;44358:20;:44;;;;;;:60;;44351:67;:::-;;;;:::-;44466:22;44462:26;;44455:33;:::-;;;;:::-;44514:15;44500:29;:10;:29;44493:36;:::-;;;;:::-;44589:12;44577:8;:24;44570:31;;:::-;;;;:::-;-1:-1;44613:15;44629:8;-1:-1;;;;;;;;;;;;;;44613:41;;44606:48;:::-;;;;:::-;44674:26;;;-1:-1;;;;44683:8;44674:26;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;44666:34;:4;:34;44659:41;:::-;;;;:::-;44734:25;;;-1:-1;;;;44743:8;44734:25;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;44712:47;:10;:47;;44705:54;:::-;;;;:::-;44834:7;44804:14;:26;44821:9;44804:26;;;;;-1:-1;;44804:26;:::-;;;;:::-;;;;;;;;-1:-1;;44797:44;:::-;;;;:::-;44874:17;44853:38;:17;:38;-1:-1;;44846:45;:::-;;;;:::-;44921:11;44903:14;:29;-1:-1;;44896:36;:::-;;;;:::-;44981:15;44997:8;-1:-1;;;;;;;;;;;;;45050:14;-1:-1;;;45086:15;-1:-1;;;;45122:9;-1:-1;;;;;45160:17;-1:-1;;;;;45206:17;-1:-1;;;;;45245:15;-1:-1;;;;45281:1;-1:-1;;;;45303:1;-1:-1;;;;45325:1;-1:-1;;;;44981:353;45367:9;-1:-1;;45339:92;45378:17;-1:-1;;45339:92;45397:17;-1:-1;;45339:92;45416:14;-1:-1;;45339:92;45357:8;-1:-1;;;;45339:92;45467:14;;;45485:9;45467:27;;;;;-1:-1;;45467:27;:::-;;;;:::-;;;;;;;;;;;45601:8;-1:-1;45575:22;45554:20;:44;;;;;;:55;45614:31;;;;:::i;:::-;;;43468:2177;:::-;45658:683;;;;;:::-;-1:-1;;;;;45658:683;:::-;;;;:::-;46024:15;-1:-1;46009:48;-1:-1;46041:15;-1:-1;46009:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;46009:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;46002:55;:::-;;;;:::-;46108:1;-1:-1;46069:15;46085:8;-1:-1;;;;;;;;;;;;;;46069:40;;46062:47;:::-;;;;:::-;46114:14;;;-1:-1;46132:15;46148:8;-1:-1;;;;;;;;;;;;;;46114:53;;;-1:-1;;46114:53;:::-;;;;:::-;;;;;;;;;;;46210:9;-1:-1;;46172:15;46188:8;-1:-1;;;;;;;;;;;;;;46172:47;46224:14;;;46242:9;46224:27;;;;;-1:-1;;46224:27;:::-;;;;:::-;;;;;;;;;;;46281:7;46263:14;:25;-1:-1;;46256:32;:::-;;;;:::-;46331:9;-1:-1;;46293:48;46321:8;-1:-1;;;;46293:48;45658:683;:::-;46354:753;;;;;:::-;-1:-1;;;;;46354:753;:::-;;;;:::-;46809:15;-1:-1;46794:48;-1:-1;46826:15;-1:-1;46794:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;46794:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;46787:55;:::-;;;;:::-;46893:1;-1:-1;46854:15;46870:8;-1:-1;;;;;;;;;;;;;;46854:40;;46847:47;:::-;;;;:::-;46953:17;46906:64;-1:-1;46906:15;46922:8;-1:-1;;;;;;;;;;;;;;46906:64;-1:-1;;46899:71;:::-;;;;:::-;47021:17;-1:-1;;46975:15;46991:8;-1:-1;;;;;;;;;;;;;;46975:63;47089:17;-1:-1;;47043:64;47079:8;-1:-1;;;;47043:64;46354:753;:::-;47120;;;;;:::-;-1:-1;;;;;47120:753;:::-;;;;:::-;47575:15;-1:-1;47560:48;-1:-1;47592:15;-1:-1;47560:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;47560:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;47553:55;:::-;;;;:::-;47659:1;-1:-1;47620:15;47636:8;-1:-1;;;;;;;;;;;;;;47620:40;;47613:47;:::-;;;;:::-;47719:17;47672:64;-1:-1;47672:15;47688:8;-1:-1;;;;;;;;;;;;;;47672:64;-1:-1;;47665:71;:::-;;;;:::-;47787:17;-1:-1;;47741:15;47757:8;-1:-1;;;;;;;;;;;;;;47741:63;47855:17;-1:-1;;47809:64;47845:8;-1:-1;;;;47809:64;47120:753;:::-;47886:628;;;;;:::-;-1:-1;;;;;47886:628;:::-;;;;:::-;48281:15;48267:29;:10;:29;48260:36;:::-;;;;:::-;48326:11;48308:14;:29;-1:-1;;48301:36;:::-;;;;:::-;48388:1;-1:-1;48349:15;48365:8;-1:-1;;;;;;;;;;;;;;48349:40;;48342:47;:::-;;;;:::-;48437:14;-1:-1;48394:15;48410:8;-1:-1;;;;;;;;;;;;;48394:57;48499:14;-1:-1;;48456:58;48489:8;-1:-1;;;;48456:58;47886:628;:::-;48715:1842;;;;;:::-;-1:-1;;;;;48715:1842;:::-;;;;:::-;-1:-1;;;;;48715:1842;:::-;;;;:::-;49370:15;49356:29;:10;:29;49349:36;:::-;;;;:::-;49411:12;49397:10;:26;49390:33;;:::-;;;;:::-;49476:1;-1:-1;49435:15;49451:10;-1:-1;;;;;;;;;;;;;;49435:42;;49428:49;:::-;;;;:::-;-1:-1;49489:15;49505:10;-1:-1;;;;;;;;;;;;;;49489:43;;49482:50;:::-;;;;:::-;49538:54;49565:15;49581:10;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;48715:1842;49598:32;;;;;;;;;;;;;;;;;;49619:10;-1:-1;;;49598:32;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;49682:14;;;-1:-1;49682:36;;;;;-1:-1;;49682:36;:::-;;;;:::-;;;;;;;;;;;49802:1;-1:-1;49762:15;49778:10;-1:-1;;;;;;;;;;;;;;49762:41;49809:15;49825:10;-1:-1;;;;;;;;;;;;;49854:442;-1:-1;;;49854:442;-1:-1;;;;;49854:442;-1:-1;;;;;49854:442;-1:-1;;;;;49854:442;-1:-1;;;;;49854:442;-1:-1;;;;;49854:442;-1:-1;;;;;50266:1;-1:-1;;;;50288:1;-1:-1;;;;49809:488;50312:10;50303:40;;;:::-;;;;:::-;;;;-1:-1;;;50332:10;-1:-1;;;;50303:40;50312:10;50303:40;;;;:::-;;;;:::-;50381:10;-1:-1;50369:10;-1:-1;;;;50348:44;50398:159;;;;;;;:::-;50476:10;50447:39;50468:3;50447:25;;;;;:::-;;;;:::-;:20;:25;;;;;;:39;;50444:113;;:::-;50528:10;-1:-1;50521:3;50500:25;;;;;:::-;;;;:::-;:20;:25;;;;;;:38;50551:6;;;50444:113::-;50398:159;;;;;;;;;;;:::-;:::-;;;48715:1842;:::-;50623:1153;;;;;:::-;50662:10;50623:1153;;;:::-;:::-;;;;;;:::-;-1:-1;;;;;50623:1153;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;51627:8;-1:-1;51612:56;-1:-1;51637:15;-1:-1;51612:56;-1:-1;51654:13;-1:-1;51612:56;-1:-1;;;;;;;;;;;;:::-;;;;;;;;51612:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;51605:63;:::-;;;;:::-;51719:1;-1:-1;51680:15;51696:8;-1:-1;;;;;;;;;;;;;;51680:40;51673:47;;:::-;;;;:::-;51746:30;;51767:8;-1:-1;;;51746:30;;;;;;:::i;:::-;;;;;50623:1153;:::-;51789:890;;;;;:::-;-1:-1;;;;;51789:890;:::-;;;;:::-;52159:15;-1:-1;52144:48;-1:-1;52176:15;-1:-1;52144:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;52144:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;52137:55;:::-;;;;:::-;52276:1;-1:-1;52237:15;52253:8;-1:-1;;;;;;;;;;;;;;52237:40;;52230:47;:::-;;;;:::-;52338:1;52318:21;51789:890;52344:129;;;;;;;:::-;;;52353:20;52344:129;;;;;;;;;52386:1;:17;;52383:39;;:::-;52417:5;:::-;52383:39::-;52443:8;52438:13;:1;:13;52431:20;;:::-;;;;:::-;52460:8;;;52472:1;52460:13;;;;-1:-1;;52460:13;:::-;;;;:::-;;;;;;;;;;;52344:129::-;;;;;;;;;;;;:::-;:::-;;;52525:18;52514:8;:29;;52507:36;:::-;;;;:::-;52596:8;-1:-1;52570:22;52549:20;:44;;;;;;:55;52609:31;;;;;;:::i;:::-;;;;;52670:8;-1:-1;;;;52645:34;51789:890;:::-;52692:753;;;;;:::-;-1:-1;;;;;52692:753;:::-;;;;:::-;53097:15;-1:-1;53082:48;-1:-1;53114:15;-1:-1;53082:48;-1:-1;;;;;;;;;;;;:::-;;;;;;;;53082:10;-1:-1;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;53075:55;:::-;;;;:::-;53135:254;;;;;;;:::-;53213:8;53184:37;53205:3;53184:25;;;;;:::-;;;;:::-;:20;:25;;;;;;:37;;53181:208;;:::-;53263:12;53256:3;53235:25;;;;;:::-;;;;:::-;:20;:25;;;;;;:40;53288:31;;;;;;:::i;:::-;;;;;53361:8;-1:-1;;;;53332:38;53383:6;;;53181:208::-;53135:254;;;;;;;;;;;:::-;:::-;;;53440:5;;;52692:753::-;54100:365;;;;;:::-;54140:10;54100:365;;;:::-;:::-;;;;;;:::-;-1:-1;;;;;54100:365;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;54434:31;;54456:8;-1:-1;;;54434:31;;;;;;:::i;:::-;;;;;;54427:38;;;;;;54100:365::-;56321:621;;;;;:::-;56361:10;56321:621;;;:::-;:::-;;;;;;:::-;-1:-1;;;;;56321:621;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;56911:31;;56933:8;-1:-1;;;56911:31;;;;;;:::i;:::-;;;;;;56904:38;;;;;;56321:621::-;57895:169;;;;;:::-;57962:19;;;;:::i;:::-;;;;57942:39;:17;:39;;57939:125;;:::-;57998:17;:39;58018:19;;;;;;:::i;:::-;;;;;;57998:39;;;-1:-1;;57998:39;:::-;;;;:::-;;;;;;;;57991:46;;;;;57939:125;:::-;:::-;58063:1;58056:8;;;;;57939:125::-;57895:169;:::-;58083:527;;;;;:::-;58122:10;58083:527;;;:::-;:::-;;;;;;:::-;-1:-1;;;;;58083:527;:::-;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;58580:30;;58601:8;-1:-1;;;58580:30;;;;;;:::i;:::-;;;;;;58573:37;;;;;;58083:527::-;61101:5363;;;;;:::-;62969:1;-1:-1;62928:15;62944:10;-1:-1;;;;;;;;;;;;;62928:42;;62921:49;:::-;;;;:::-;63068:4;:19;63075:12;63068:19;;;;;-1:-1;;63068:19;:::-;;;;:::-;;;;;;;;63032:32;;;-1:-1;;;63053:10;-1:-1;;;63032:32;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;:55;-1:-1;;63025:62;:::-;;;;:::-;63177:1;63170:4;:8;;63167:55;;:::-;63205:10;-1:-1;;63217:4;-1:-1;;;63188:34;;;;;;;;:::i;:::-;;;63167:55::-;63341:34;;63358:10;-1:-1;;63370:4;-1:-1;;;63341:34;;;;;;;;:::i;:::-;;;;;;-1:-1;63320:55;61101:5363;-1:-1;63423:15;63439:10;-1:-1;;;;;;;;;;;;63423:45;-1:-1;63423:45;63464:4;63423:45;;;;;-1:-1;;63423:45;:::-;;;;:::-;;;;;;;;;;;63574:33;;;;63596:10;-1:-1;;63574:33;;;;;;:::i;:::-;;;;;;;;-1:-1;63556:51;61101:5363;63764:33;;;;;;63786:10;-1:-1;;63764:33;;;;;;:::i;:::-;;;;;;;;;;-1:-1;63748:49;61101:5363;63829:12;63825:23;63843:4;63825:23;;;;;;:::-;;;:::-;:::-;;:::-;;;;;63802:46;61101:5363;63871:1;63857:11;:15;;63854:146;;:::-;-1:-1;63882:15;63898:10;-1:-1;;;;;;;;;;;;63882:52;-1:-1;63882:52;63923:11;63882:52;;;-1:-1;;63882:52;:::-;;;;:::-;;;;;;;;;;;63943:14;;;63961:11;63943:29;;;-1:-1;;63943:29;:::-;;;;:::-;;;;;;;;;;;63981:4;;;63989:11;63981:19;;;-1:-1;;63981:19;:::-;;;;:::-;;;;;;;;;;;63854:146::-;64365:1;64356:6;:10;;64353:103;;:::-;-1:-1;64376:15;64392:10;-1:-1;;;;;;;;;;;;64376:47;-1:-1;64376:47;64417:6;64376:47;;;;;-1:-1;;64376:47;:::-;;;;:::-;;;;;;;;;;;64432:14;;;64450:6;64432:24;;;;;-1:-1;;64432:24;:::-;;;;:::-;;;;;;;;;;;64353:103::-;64881:4;:18;64888:11;64881:18;;;;;-1:-1;;64881:18;:::-;;;;:::-;;;;;;;;64859:40;61101:5363;64920:6;64907:19;:10;:19;;64904:309;;:::-;64972:77;;;;;;;;;;64997:10;-1:-1;;;65017:10;-1:-1;;65029:6;:19;65038:10;65029:19;;;-1:-1;;65029:19;:::-;;;;:::-;;;;;;;;-1:-1;;64972:77;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;65054:159;64904:309::-;:::-;65072:6;65059:19;:10;:19;;65054:159;;:::-;65126:87;;;;;;;;;;65155:10;-1:-1;;;65175:10;-1:-1;;65187:4;-1:-1;;65193:10;:19;65206:6;65193:19;;;-1:-1;;65193:19;:::-;;;;:::-;;;;;;;;-1:-1;;65126:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;65054:159::-;65444:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:36;65476:4;65444:36;;;;;-1:-1;;65444:36;:::-;;;;:::-;;;;;;;;65483:9;65444:48;;;-1:-1;;65444:48;:::-;;;;:::-;;;;;;;;65410:82;61101:5363;65525:4;65500:29;:22;:29;;65497:132;;:::-;65560:22;:29;65585:4;65560:29;;;-1:-1;;65560:29;:::-;;;;:::-;;;;;;;;65540:17;:49;65497:132;:::-;:::-;65628:1;65608:17;:21;65497:132::-;65704:15;-1:-1;65663:15;65679:10;-1:-1;;;;;;;;;;;;;65663:56;65742:15;65724;:33;65763:300;;;;65841:11;-1:-1;;65763:300;-1:-1;65862:15;65878:10;-1:-1;;;;;;;;;;;;;;;65763:300;-1:-1;65909:15;65925:10;-1:-1;;;;;;;;;;;;;;;65763:300;-1:-1;65956:15;65972:10;-1:-1;;;;;;;;;;;;;;;65763:300;66003:6;-1:-1;;65763:300;-1:-1;66019:15;66035:10;-1:-1;;;;;;;;;;;;;;;65763:300;65793:10;-1:-1;;;65763:300;-1:-1;66072:15;66088:10;-1:-1;;;;;;;;;;;;;66072:42;;-1:-1;;:::-;;;:::-;:::-;66118:22;-1:-1;:::-;66069:395;;:::-;66325:43;;;-1:-1;;;;66334:10;66325:43;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;66318:50;;;;;;66069:395;:::-;:::-;66460:4;66453:11;;;;;;66069:395::-;61101:5363;:::-;66477:893;;;;;:::-;66521:11;66477:893;;;:::-;:::-;;;;;;:::-;;;;;;;;:::-;:::-;;:::-;:::-;-1:-1;;;;;66477:893;:::-;;;;:::-;67095:15;67081:29;:10;:29;67074:36;:::-;;;;:::-;67190:10;67181:27;:5;:27;67174:34;;:::-;;;;:::-;67230:6;-1:-1;67213:23;66477:893;67253:11;67244:5;:20;;67241:69;;:::-;67282:28;;;-1:-1;;;67305:4;-1:-1;;;67288:5;67282:28;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;67274:5;:36;67241:69::-;67315:55;;;;67340:5;-1:-1;;;67347:15;-1:-1;;;67364:5;-1:-1;;;67315:55;;;;;;;;;;:::i;:::-;;;;;;;66477:893;:::-;2556:18;;;;;:::-;-1:-1;;2556:18;;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;2556:18;;;;;;;;-1:-1;;;;;;;;;;;2556:18;;:::-;2583;;;;;:::-;-1:-1;;2583:18;;;;;;;;;;;;;;;;;:::-;;;;;;;;;:::-;;:::-;:::-;;;;;;;;;;;;;:::-;;;;;;;;;;;;:::-;:::-;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;2583:18;;;;;;;;-1:-1;;;;;;;;;;;2583:18;;:::-;2612:15;;;;;:::-;-1:-1;2612:15;;;;;;:::-;2640:33;;;;;:::-;-1:-1;;;;;2640:33;:::-;;;;:::-;-1:-1;;;;;;;;;;2640:33;;;;;;:::-;2685:51;;;;;:::-;-1:-1;;;;;2685:51;:::-;;;;:::-;-1:-1;;;;;2685:51;:::-;;;;:::-;-1:-1;;;;;;;;;;;;;;;;;;;2685:51;;;;;;:::-;2750:15;;;;;:::-;-1:-1;2750:15;;;;;;:::-;2774:13;;;;;:::-;-1:-1;2774:13;;;;;;:::-;2800:15;;;;;:::-;-1:-1;2800:15;;;;;;:::-;2828;;;;;:::-;-1:-1;2828:15;;;;;;:::-;2854;;;;;:::-;-1:-1;2854:15;;;;;;:::-;6380:40;;;;;:::-;-1:-1;;;;;6380:40;:::-;;;;:::-;-1:-1;;;6380:40;;;;;;;;-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6380:40;;;;;;;;:::-;7111:35;;;;;:::-;-1:-1;;;;;;:::-;;;;:::-;;;;;;;;7111:35;;;;;;:::-;7167:12;;;;;:::-;-1:-1;7167:12;;;;;;:::-;7195:15;;;;;:::-;-1:-1;7195:15;;;;;;:::-;7266;;;;;:::-;-1:-1;7266:15;;;;;;:::-;7360;;;;;:::-;-1:-1;7360:15;;;;;;:::-;7442;;;;;:::-;-1:-1;7442:15;;;;;;:::-;7504;;;;;:::-;-1:-1;7504:15;;;;;;:::-;7576;;;;;:::-;-1:-1;7576:15;;;;;;:::-;7667;;;;;:::-;-1:-1;7667:15;;;;;;:::-;7767;;;;;:::-;-1:-1;7767:15;;;;;;:::-;7914;;;;;:::-;-1:-1;7914:15;;;;;;:::-;8009;;;;;:::-;-1:-1;8009:15;;;;;;:::-;8512:33;;;;;:::-;-1:-1;;;;;8512:33;:::-;;;;:::-;-1:-1;;;;;;;;;;8512:33;;;;;;:::-;8564:15;;;;;:::-;-1:-1;8564:15;;;;;;:::-;-1:-1;:::-;;;;20755:533::-;-1:-1;20755:533;-1:-1;;;;;;21025:147;21045:38;;;;;;;-1:-1;;;;;;;;;;;;;;;;21025:147;-1:-1;21025:147;;;;;;21105:8;21097:26;21025:147;-1:-1;;21025:147;;;;;;;;21145:6;21137:24;21025:147;-1:-1;;21025:147;;;;;;;;;;;;;;-1:-1;;;;;20992:211;-1:-1;;;;;;;:::-;;;;:::-;;20992:211;;;;;;;21010:5;20992:211;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;20970:233;-1:-1;;;;;;;:::-;;;;:::-;;20755:533;21227:1;21215:8;21211:17;;21208:80;21238:50;21208:80::-;21253:8;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;21245:23;;;;21238:50;;;:::-;;;;;;;21270:18;;;;;;;21238:50;;;;:::-;20755:533;;:::o;21301:604::-;-1:-1;21301:604;-1:-1;;;;;;;;21592:197;21612:50;;;;;;;-1:-1;;;;;;;;;;;;;;;;21592:197;-1:-1;21592:197;;;;;;21684:6;21676:24;21592:197;-1:-1;;21592:197;;;;;;;;21722:8;21714:26;21592:197;-1:-1;;21592:197;;;;;;;;21762:6;21754:24;21592:197;-1:-1;;21592:197;;;;;;;;;;;;;;-1:-1;;;;;21559:261;-1:-1;;;;;;;:::-;;;;:::-;;21559:261;;;;;;20992:211;21577:5;21559:261;;;;:::-;;;;:::-;;;;;;;;:::-;;;:::-;:::-;;:::-;;;;;;;;-1:-1;;;;;21537:283;-1:-1;;;;;;;:::-;;;;:::-;;21301:604;21844:1;21832:8;21828:17;;21825:80;21855:50;21825:80::-;21870:8;-1:-1;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;:::-;;;;:::-;;;;;;;;;;;;21862:23;;;;21855:50;;;:::-;;;;;;;21887:18;;;;;;;21855:50;;;;:::-;21301:604;;:::o;21918:341::-;-1:-1;21918:341;-1:-1;;;;;;22121:4;22104:36;-1:-1;22127:12;22104:36;-1:-1;;;;;;;;;;;;:::-;;;;;;;;22104:8;-1:-1;;;;:::-;;;;;:::-;:::-;;;;;;;;;;;;:::-;:::-;;;;;;22097:43;;:::-;;;;:::-;22145:14;22160:6;-1:-1;22145:32;;;;;;;-1:-1;22145:32;22171:6;22145:32;;;-1:-1;;22145:32;:::-;;;;:::-;;;;;;;;;;;22182:14;22197:8;-1:-1;22182:34;;;;;;;-1:-1;22182:34;22210:6;22182:34;;;;;-1:-1;;22182:34;:::-;;;;:::-;;;;;;;;;;;22252:6;-1:-1;;22221:38;22242:8;-1:-1;22234:6;-1:-1;;;;22221:38;21918:341;;:::o;28106:120::-;-1:-1;28106:120;28183:26;;;-1:-1;;;28204:4;-1:-1;;;28183:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;:43;28212:14;28183:43;;;;;-1:-1;;28183:43;:::-;;;;:::-;;;;;;;;28176:50;;;;;;:::o;28578:429::-;-1:-1;28578:429;28652:15;28670;28652:33;;;-1:-1;;28652:33;:::-;;;;:::-;;;;;;;;28689:28;28651:66;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;28623:94;28578:429;28745:23;28726:16;:42;;28723:284;;:::-;28803:17;-1:-1;28779:41;;28836:12;:136;28869:16;:47;28904:12;28869:47;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;28935:23;28869:89;;;;;;;28836:136;;-1:-1;;28836:136;:::-;;;;:::-;;;;;;;;28829:143;;;;;;:::o;28723:284;:::-;:::-;29006:1;28999:8;;;;;;:::o;28723:284::-;28578:429;29025:91::-;-1:-1;29025:91;29065:19;;;;;;:::i;:::-;;;;;;:51;29087:29;;;;;;;;:::i;:::-;;;;;;;;29065:51;;;-1:-1;;29065:51;:::-;;;;:::-;;;;;;;;29058:58;;;;;;:::o;29128:1000::-;-1:-1;29128:1000;-1:-1;;;;29465:1;29447:19;29128:1000;29545:16;-1:-1;29522:39;29128:1000;29583:1;29569:11;:15;;29566:335;;:::-;29763:6;:20;29772:11;29763:20;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;29786:17;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;29763:40;;;;:::-;;;;:::-;;;;;;;29753:6;:50;29566:335;:::-;:::-;29895:6;-1:-1;29886:6;:15;29566:335::-;29923:1;29913:6;:11;29906:18;;:::-;;;;:::-;30013:11;:20;30027:6;30013:20;;;;;-1:-1;;30013:20;:::-;;;;:::-;;;;;;;;29994:16;:39;30038:14;30053:2;-1:-1;30038:28;;;;;;;-1:-1;30038:28;30060:6;30038:28;;;;;-1:-1;;30038:28;:::-;;;;:::-;;;;;;;;;;;30102:6;-1:-1;;30071:38;30100:1;-1:-1;30084:12;-1:-1;;;30071:38;30122:6;30115:13;;;;;;;:::o;32977:360::-;-1:-1;32977:360;-1:-1;;33073:16;:21;;33070:47;;:::-;33111:6;33104:13;;;;;;;:::o;33070:47::-;33270:6;:34;33287:17;;;;;;;;:::i;:::-;;;;;;;;33270:34;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;33315:16;33270:61;;;;:::-;;;;:::-;;;;;;;33253:84;;;;;;:::o;33356:429::-;-1:-1;33356:429;-1:-1;;33531:17;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1;33509:39;33356:429;33569:1;33556:10;:14;;33553:232;;:::-;33685:6;:37;33706:16;33685:37;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;33737:10;33685:62;;;;:::-;;;;:::-;;;;;;;33663:95;;;;;;:::o;33553:232;:::-;:::-;33784:1;33777:8;;;;;;:::o;33553:232::-;33356:429;34842:1129::-;-1:-1;34842:1129;-1:-1;;;;;34982:15;34998:8;-1:-1;;;;;;;;;;;;;;;34961:56;34842:1129;35042:4;35029:17;:9;:17;-1:-1;;35022:24;:::-;;;;:::-;35155:1;35137:14;:19;35134:643;;;:::-;35580:4;:21;35587:14;35580:21;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;35604:14;35580:38;;;;:::-;;;;:::-;;;;;;;-1:-1;35632:15;35648:8;-1:-1;;;;;;;;;;;;;;35451:227;;;;;;:::-;;;:::-;:::-;;:::-;;;;;35427:251;;-1:-1;35687:15;35703:8;-1:-1;;;;;;;;;;;;;35687:51;-1:-1;35687:51;35726:12;35687:51;;;-1:-1;;35687:51;:::-;;;;:::-;;;;;;;;;;;35747:14;;;35765:12;35747:30;;;-1:-1;;35747:30;:::-;;;;:::-;;;;;;;;;;;35134:643::-;-1:-1;35842:15;35858:8;-1:-1;;;;;;;;;;;;;35842:43;-1:-1;35842:43;35881:4;35842:43;;;;;-1:-1;;35842:43;:::-;;;;:::-;;;;;;;;;;;35928:9;:16;35940:4;35928:16;;;-1:-1;;35928:16;:::-;;;;:::-;;;;;;;;-1:-1;35890:15;35906:8;-1:-1;;;;;;;;;;;;;;35890:54;35949:14;;;35967:4;35949:22;;;-1:-1;;35949:22;:::-;;;;:::-;;;;;;;;;;;34842:1129;;:::o;42807:648::-;-1:-1;42807:648;43108:1;43090:19;42807:648;43114:341;;;;;;;:::-;43201:3;43180:25;;;;;:::-;;;;:::-;:20;:25;;;;;;-1:-1;43160:45;;43217:8;:24;;43214:241;;:::-;43255:6;;;43265:1;43255:11;;;;-1:-1;;43255:11;:::-;;;;:::-;;;;;;;;;;;43328:127;43214:241::-;:::-;43342:1;43333:6;:10;;43328:127;;:::-;43394:8;-1:-1;43378:3;:12;43384:6;43378:12;;;-1:-1;;43378:12;:::-;;;;:::-;;;;;;;;43357:34;;;;:::-;;;;:::-;:20;:34;;;;;;:45;43443:12;43436:3;43415:25;;;;;:::-;;;;:::-;:20;:25;;;;;;:40;43328:127::-;43114:341;;;;;;;;;;;:::-;:::-;;;42807:648;;:::o;48527:175::-;-1:-1;48527:175;-1:-1;;48571:14;;;-1:-1;48589:15;48605:8;-1:-1;;;;;;;;;;;;;;48571:53;;;-1:-1;;48571:53;:::-;;;;:::-;;;;;;;;;;;48667:1;-1:-1;48629:15;48645:8;-1:-1;;;;;;;;;;;;;;48629:39;48693:8;-1:-1;;;;48673:29;48527:175;;:::o;53508:573::-;-1:-1;53508:573;-1:-1;;53606:14;:19;;53603:74;;:::-;-1:-1;53642:15;53658:8;-1:-1;;;;;;;;;;;;;;53635:42;;;;;;;:::o;53603:74::-;-1:-1;53723:15;53739:8;-1:-1;;;;;;;;;;;;;;53723:65;53769:19;;;;;;;;;;:::i;:::-;;;;;;;;;;53723:65;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;53799:7;53723:83;;;;;;;53683:129;53508:573;-1:-1;53847:15;53863:8;-1:-1;;;;;;;;;;;;;;;53817:65;53508:573;53891:22;53888:193;;;:::-;53930:18;53923:25;;;;;;;:::o;53953:128;53888:193::-;:::-;53980:18;53958:40;:18;:40;-1:-1;;53953:128;;:::-;54015:1;54008:8;;;;;;:::o;53953:128;:::-;:::-;54042:18;:39;54063:18;54042:39;;;-1:-1;;54042:39;:::-;;;;:::-;;;;;;;;54035:46;;;;;;:::o;53953:128::-;53508:573;54484:1819::-;-1:-1;54484:1819;-1:-1;;54582:22;54579:43;;;:::-;54621:1;54614:8;;;;;;:::o;54579:43::-;54656:19;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1;54627:48;54484:1819;54708:14;:34;54725:17;54708:34;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;54745:7;54708:44;;;;;;;54680:72;54484:1819;54785:14;-1:-1;54758:41;54484:1819;-1:-1;54834:15;54850:8;-1:-1;;;;;;;;;;;;;;54834:55;54872:17;54834:55;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;54892:7;54834:65;;;;;;;54804:95;54484:1819;-1:-1;54934:15;54950:8;-1:-1;;;;;;;;;;;;;;;54904:65;54484:1819;-1:-1;55012:15;55028:8;-1:-1;;;;;;;;;;;;;;;54974:81;54484:1819;-1:-1;55098:15;55114:8;-1:-1;;;;;;;;;;;;;;;55060:81;54484:1819;55200:18;55178:40;:18;:40;-1:-1;;;;:::-;;;:::-;:::-;55241:15;55222:34;:15;:34;-1:-1;;:::-;55175:99;;:::-;55273:1;55266:8;;;;;;:::o;55175:99::-;55351:18;:39;55372:18;55351:39;;;-1:-1;;55351:39;:::-;;;;:::-;;;;;;;;55330:60;54484:1819;55455:9;55451:49;55466:15;:33;55484:15;55466:33;;;-1:-1;;55466:33;:::-;;;;:::-;;;;;;;;55451:49;;;;;:::-;;;:::-;:::-;;:::-;;;;;55439:9;:61;55628:9;55624:42;55639:26;;;-1:-1;;;55660:4;-1:-1;;;55639:26;;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;55624:42;;;;;;:::-;;;:::-;:::-;;:::-;;;;;55612:9;:54;56191:26;56179:38;:9;:38;;56176:127;;:::-;56234:1;56227:8;;;;;;:::o;56176:127;:::-;:::-;56265:9;56261:42;56276:26;56261:42;;;;;;:::-;;;:::-;:::-;;:::-;;;;;56254:49;;;;;;:::o;56176:127::-;54484:1819;56961:857::-;-1:-1;56961:857;-1:-1;;;57085:15;57101:8;-1:-1;;;;;;;;;;;;;;;57054:67;56961:857;57158:15;57176:19;57158:37;;;-1:-1;;57158:37;:::-;;;;:::-;;;;;;;;57126:69;56961:857;57228:19;:58;-1:-1;57250:15;57266:8;-1:-1;;;;;;;;;;;;;;57228:58;;;-1:-1;;57228:58;:::-;;;;:::-;;;;;;;;57200:86;56961:857;57419:1;57396:20;:24;;-1:-1;;:::-;57444:1;57425:16;:20;;-1:-1;;:::-;57450:29;;;-1:-1;;;;57459:8;57450:29;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;-1:-1;;:::-;:::-;;:::-;;:::-;:::-;;:::-;57393:425;;:::-;-1:-1;57680:15;57696:8;-1:-1;;;;;;;;;;;;;;57680:70;57730:20;57680:70;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;57765:16;57680:101;;;;:::-;;;;:::-;;;;;;;57659:132;;;;;;:::o;57393:425;:::-;:::-;57817:1;57810:8;;;;;;:::o;57393:425::-;56961:857;58623:2465::-;-1:-1;58623:2465;-1:-1;;;;58910:15;-1:-1;58928:15;58944:8;-1:-1;;;;;;;;;;;;;;58910:54;;;-1:-1;;58910:54;:::-;;;;:::-;;;;;;;;58890:74;58623:2465;58988:1;58976:8;:13;58969:20;;:::-;;;;:::-;59045:4;:9;;59042:111;;:::-;59152:1;59145:8;;;;;;:::o;59042:111::-;-1:-1;59210:15;59226:8;-1:-1;;;;;;;;;;;;;;59210:74;59248:36;;;-1:-1;;;;59257:8;59248:36;;;;:::-;;;;:::-;;;;;:::-;;;;:::-;;;;59210:74;;;-1:-1;;59210:74;:::-;;;;:::-;;;;;;;;59300:8;59209:99;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;59324:18;59209:133;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;59363:7;59195:175;;;;;;;59381:13;59195:199;;;;;;;59159:241;58623:2465;59622:4;:55;59637:15;59653:8;-1:-1;;;;;;;;;;;;;59622:55;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;59688:7;59622:73;;;;;;;59586:115;58623:2465;59808:4;:26;59815:19;59808:26;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;59837:7;59808:36;;;;;;;59781:63;58623:2465;60120:15;:32;60138:14;60120:32;;;;;-1:-1;;60120:32;:::-;;;;:::-;;;;;;;;60155:14;60120:49;;;;;-1:-1;;60120:49;:::-;;;;:::-;;;;;;;;60099:70;58623:2465;60234:4;60222:16;:9;:16;;60219:45;;:::-;60260:4;-1:-1;60248:9;:16;60219:45::-;60284:1;60272:9;:13;;60269:798;60970:97;60269:798::-;60373:43;;;;;;;;;;;;;;;;;;60400:4;-1:-1;;60406:9;-1:-1;;;60373:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1;60355:61;;60505:1;60488:14;:18;;60485:327;;:::-;60669:14;:39;60702:6;60669:39;;;;;;;;;;;;;:::-;;;;:::-;;;;;;;;60727:9;60669:67;;;;:::-;;;;:::-;;;;;;;60622:128;;60763:49;;;;;;;;;;;;;;;;;;;;60778:4;-1:-1;;60784:8;-1:-1;;;60794:17;-1:-1;;;60763:49;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;60485:327::-;60996:1;60973:14;60988:4;-1:-1;;;;;;;60973:24;;60970:97;;:::-;61011:56;;;;;;;;;;;;;;;;;;61026:4;-1:-1;;61032:12;-1:-1;;;61046:14;61061:4;-1:-1;;;;;;;;;;61011:56;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;60970:97::-;61079:9;61072:16;;;;;;;:::o;",
  "language": "Vyper",
  "opcodes": "PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x0D JUMPI PUSH2 0x3EB3 JUMP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0x1C MSTORE PUSH1 0x0 MLOAD CALLVALUE ISZERO PUSH2 0x021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x83B43589 DUP2 EQ ISZERO PUSH2 0x03C JUMPI CALLER PUSH2 0x220 MSTORE CALLER PUSH2 0x240 MSTORE PUSH2 0x0B6 JUMP JUMPDEST PUSH4 0xA5B81FDF DUP2 EQ ISZERO PUSH2 0x06D JUMPI CALLER PUSH2 0x240 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x05D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0xA4 PUSH2 0x220 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x0B6 JUMP JUMPDEST PUSH4 0x538BAEAB DUP2 EQ ISZERO PUSH2 0x0B1 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0xA4 PUSH2 0x220 CALLDATACOPY PUSH1 0xC4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x0A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0xC4 PUSH2 0x240 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x0B6 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x0C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x0D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x0E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x140 CALLDATACOPY PUSH1 0x40 PUSH1 0x64 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT ISZERO PUSH2 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x84 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1C0 CALLDATACOPY PUSH1 0x20 PUSH1 0x84 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x12 SLOAD ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SSTORE PUSH1 0x0 PUSH2 0x2A0 MSTORE PUSH2 0x2A0 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH2 0x140 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP EQ ISZERO PUSH2 0x27A JUMPI PUSH1 0x0 PUSH1 0x60 PUSH2 0x340 PUSH1 0x4 PUSH4 0x95D89B41 PUSH2 0x2E0 MSTORE PUSH2 0x2FC PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F RETURNDATASIZE GT PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 PUSH2 0x340 PUSH2 0x340 MLOAD ADD MLOAD LT PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x360 PUSH1 0x14 DUP1 PUSH1 0x20 DUP5 PUSH2 0x40 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH1 0x7 PUSH2 0x3A0 MSTORE PUSH32 0x20795661756C740000000000000000000000000 PUSH2 0x3C0 MSTORE PUSH2 0x3A0 PUSH1 0x7 DUP1 PUSH1 0x20 DUP5 PUSH2 0x40 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP DUP1 PUSH2 0x40 MSTORE PUSH2 0x40 SWAP1 POP DUP1 PUSH1 0x0 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x24D JUMPI PUSH2 0x26F JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x23A JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x2D5 JUMP JUMPDEST PUSH2 0x140 DUP1 PUSH1 0x0 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x3 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x2CE JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x299 JUMPI JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2A0 MSTORE PUSH2 0x2A0 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH2 0x1C0 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP EQ ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH2 0x2E0 MSTORE PUSH32 0x7976000000000000000000000000000000 PUSH2 0x30 MSTORE PUSH2 0x2E0 PUSH1 0x2 DUP1 PUSH1 0x20 DUP5 PUSH2 0x40 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH1 0x60 PUSH2 0x3A0 PUSH1 0x4 PUSH4 0x95D89B41 PUSH2 0x340 MSTORE PUSH2 0x35C PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x369 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3F RETURNDATASIZE GT PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x15 PUSH2 0x3A0 PUSH2 0x3A0 MLOAD ADD MLOAD LT PUSH2 0x38B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x3C0 PUSH1 0x14 DUP1 PUSH1 0x20 DUP5 PUSH2 0x40 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP DUP1 PUSH2 0x40 MSTORE PUSH2 0x40 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x4B JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x3D6 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1C0 DUP1 PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x448 JUMPI PUSH2 0x46A JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x435 JUMPI JUMPDEST POP POP POP POP POP POP JUMPDEST PUSH1 0x20 PUSH2 0x2E0 PUSH1 0x4 PUSH4 0x313CE567 PUSH2 0x280 MSTORE PUSH2 0x29C PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x49F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x2E0 MLOAD PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH1 0x2 SSTORE PUSH2 0x10 PUSH2 0x260 MLOAD LT PUSH2 0x4C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x7 SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x280 MSTORE PUSH32 0x8D55D160C009EB3D739442DF0A3CA89ED64378BFAC17E7DDAD463F9815B87 PUSH1 0x20 PUSH2 0x280 LOG1 PUSH2 0x240 MLOAD PUSH1 0x8 SSTORE PUSH2 0x240 MLOAD PUSH2 0x280 MSTORE PUSH32 0xFF54978127EDD34AECF9061FB3B155FBEEDEDDFA881EE3E0D541D3A1EEF438 PUSH1 0x20 PUSH2 0x280 LOG1 PUSH1 0x44 CALLDATALOAD PUSH1 0x15 SSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x280 MSTORE PUSH32 0xDF3C41A916AECBF42361A147F8348C242662C3CE20ECEF30E826B8642477A3D PUSH1 0x20 PUSH2 0x280 LOG1 PUSH2 0x220 MLOAD PUSH1 0x9 SSTORE PUSH2 0x220 MLOAD PUSH2 0x280 MSTORE PUSH32 0x837B9AD138A0A1839A9637AFCE536A5C13E23EB63365686843A5319A243609C PUSH1 0x20 PUSH2 0x280 LOG1 PUSH2 0x3E8 PUSH1 0x17 SSTORE PUSH2 0x3E8 PUSH2 0x280 MSTORE PUSH2 0x280 MLOAD PUSH2 0x2A0 MSTORE PUSH32 0x810A1C261CA2CCD86A152C51C43BA9DC329639D2349F98140891B2EA798EB PUSH1 0x20 PUSH2 0x2A0 LOG1 PUSH1 0xC8 PUSH1 0x16 SSTORE PUSH1 0xC8 PUSH2 0x280 MSTORE PUSH2 0x280 MLOAD PUSH2 0x2A0 MSTORE PUSH32 0x7A7883B074F96E2C7FAB65EB25ABF624C488761A5DB889E3BB84855DCC6DAAF PUSH1 0x20 PUSH2 0x2A0 LOG1 TIMESTAMP PUSH1 0x11 SSTORE TIMESTAMP PUSH1 0x12 SSTORE PUSH6 0x29D635A8E00 PUSH1 0x14 SSTORE PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179BFFACAA9A75D522B3940F PUSH1 0x20 DUP3 PUSH2 0x660 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0xB PUSH2 0x540 MSTORE PUSH32 0x596561726E205661756C74000000000000000000000 PUSH2 0x560 MSTORE PUSH2 0x540 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH1 0x20 DUP3 PUSH2 0x660 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x5 PUSH2 0x60 MSTORE PUSH32 0x302E342E33000000000000000000000000000 PUSH2 0x620 MSTORE PUSH2 0x60 DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH1 0x20 DUP3 PUSH2 0x660 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP CHAINID PUSH1 0x20 DUP3 PUSH2 0x660 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP ADDRESS PUSH1 0x20 DUP3 PUSH2 0x660 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x660 MSTORE PUSH2 0x660 SWAP1 POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH1 0x19 SSTORE STOP JUMPDEST PUSH4 0x25829410 DUP2 EQ ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x5 PUSH2 0x140 MSTORE PUSH32 0x302E342E33000000000000000000000000000 PUSH2 0x160 MSTORE PUSH2 0x140 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x1E0 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x768 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1E0 MLOAD DUP1 PUSH2 0x20 ADD DUP2 DUP3 PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP SUB CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x20 PUSH2 0x1C0 MSTORE PUSH1 0x40 PUSH2 0x1E0 MLOAD ADD PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP PUSH2 0x1C0 RETURN JUMPDEST PUSH4 0xC47F027 DUP2 EQ ISZERO PUSH2 0x83F JUMPI PUSH1 0x4A PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x140 CALLDATACOPY PUSH1 0x2A PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT ISZERO PUSH2 0x7D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x7E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 DUP1 PUSH1 0x0 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x3 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x815 JUMPI PUSH2 0x837 JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x82 JUMPI JUMPDEST POP POP POP POP POP POP STOP JUMPDEST PUSH4 0xB84C8246 DUP2 EQ ISZERO PUSH2 0x8D5 JUMPI PUSH1 0x34 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x140 CALLDATACOPY PUSH1 0x14 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT ISZERO PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x879 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 DUP1 PUSH1 0x1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x20 DUP3 MLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x8AB JUMPI PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MLOAD PUSH2 0x120 MLOAD DUP6 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x898 JUMPI JUMPDEST POP POP POP POP POP POP STOP JUMPDEST PUSH4 0xAB33EA9 DUP2 EQ ISZERO PUSH2 0x97 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xA SSTORE STOP JUMPDEST PUSH4 0x238EFCBC DUP2 EQ ISZERO PUSH2 0x953 JUMPI PUSH1 0xA SLOAD CALLER EQ PUSH2 0x921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x7 SSTORE CALLER PUSH2 0x140 MSTORE PUSH32 0x8D55D160C009EB3D739442DF0A3CA89ED64378BFAC17E7DDAD463F9815B87 PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0xD4A22BDE DUP2 EQ ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x97D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x8 SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0xFF54978127EDD34AECF9061FB3B155FBEEDEDDFA881EE3E0D541D3A1EEF438 PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0xEC38A862 DUP2 EQ ISZERO PUSH2 0xA72 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x9CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x9DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH2 0x160 MSTORE PUSH1 0x0 PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD PUSH1 0x4 CALLDATALOAD EQ ISZERO PUSH2 0xA1B JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0xA2B JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x9FD JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD ISZERO PUSH2 0xA3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0xDF3C41A916AECBF42361A147F8348C242662C3CE20ECEF30E826B8642477A3D PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0x7A55365 DUP2 EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x7 SLOAD CALLER EQ PUSH2 0xA8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A76400 PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0xAA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x14 SSTORE STOP JUMPDEST PUSH4 0xBDC8144B DUP2 EQ ISZERO PUSH2 0xAFB JUMPI PUSH1 0x7 SLOAD CALLER EQ PUSH2 0xAC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xE SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0xAE565AAB888BCA5E19E25A13DB7BC9144305BF55CB0F3F4D724F730E5ACDD62 PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0x70897B23 DUP2 EQ ISZERO PUSH2 0xB5C JUMPI PUSH1 0x7 SLOAD CALLER EQ PUSH2 0xB15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0xB26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x17 SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0x810A1C261CA2CCD86A152C51C43BA9DC329639D2349F98140891B2EA798EB PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0xFE56E232 DUP2 EQ ISZERO PUSH2 0xBBD JUMPI PUSH1 0x7 SLOAD CALLER EQ PUSH2 0xB76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0x4 CALLDATALOAD GT ISZERO PUSH2 0xB87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x16 SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0x7A7883B074F96E2C7FAB65EB25ABF624C488761A5DB889E3BB84855DCC6DAAF PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0x8ADAC4A DUP2 EQ ISZERO PUSH2 0xC6E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0xBD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0xC18 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0xC28 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0xBFC JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0x837B9AD138A0A1839A9637AFCE536A5C13E23EB63365686843A5319A243609C PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0x14C6442 DUP2 EQ ISZERO PUSH2 0xD3A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SHR ISZERO PUSH2 0xC8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x9 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0xCD1 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0xCE1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0xCB5 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0xD4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xD SSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH32 0xBA40372A3A724DCA3C57156128EF1E896724B65B37A17F19B1AD5DE68F3A4F3 PUSH1 0x20 PUSH2 0x140 LOG1 STOP JUMPDEST PUSH4 0x94148415 DUP2 EQ ISZERO PUSH2 0x10C0 JUMPI PUSH1 0x0 PUSH2 0x120 MSTORE JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0xD62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH2 0x120 MLOAD ADD PUSH2 0x120 MSTORE PUSH2 0x280 PUSH2 0x120 MLOAD LT ISZERO PUSH2 0xD7F JUMPI PUSH2 0xD4D JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0xDBE JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0xDCE JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0xDA2 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 CALLDATASIZE PUSH2 0x140 CALLDATACOPY PUSH2 0x3C0 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xE23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD MSTORE PUSH1 0x4 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xE3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xE6E JUMPI PUSH2 0x140 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xE5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xE84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD XOR PUSH2 0xE93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xEAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0xED0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E0 MSTORE PUSH2 0x40 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH1 0x4 PUSH2 0x40 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xFB JUMPI PUSH1 0x1 PUSH2 0x3E0 MSTORE PUSH2 0xFA7 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x40 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x4 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD EQ ISZERO PUSH2 0xF49 JUMPI PUSH1 0x1 PUSH2 0x3E0 MSTORE JUMPDEST PUSH2 0x3C0 MLOAD PUSH2 0x40 MLOAD GT ISZERO ISZERO PUSH2 0xF5D JUMPI PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x4 PUSH2 0x40 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x4 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xF88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD XOR PUSH2 0xF97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0xEE2 JUMPI JUMPDEST POP POP PUSH2 0x3E0 MLOAD PUSH2 0xFB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xFC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x3C0 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0xDF2 JUMPI JUMPDEST POP POP PUSH1 0x4 CALLDATALOAD PUSH2 0x3C0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x3E0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x40 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x420 MSTORE PUSH1 0x84 CALLDATALOAD PUSH2 0x440 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH2 0x460 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH2 0x480 MSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x4A0 MSTORE PUSH2 0x14 CALLDATALOAD PUSH2 0x4C0 MSTORE PUSH2 0x124 CALLDATALOAD PUSH2 0x4E0 MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x50 MSTORE PUSH2 0x164 CALLDATALOAD PUSH2 0x520 MSTORE PUSH2 0x184 CALLDATALOAD PUSH2 0x540 MSTORE PUSH2 0x1A4 CALLDATALOAD PUSH2 0x560 MSTORE PUSH2 0x1C4 CALLDATALOAD PUSH2 0x580 MSTORE PUSH2 0x1E4 CALLDATALOAD PUSH2 0x5A0 MSTORE PUSH2 0x24 CALLDATALOAD PUSH2 0x5C0 MSTORE PUSH2 0x224 CALLDATALOAD PUSH2 0x5E0 MSTORE PUSH2 0x244 CALLDATALOAD PUSH2 0x60 MSTORE PUSH2 0x264 CALLDATALOAD PUSH2 0x620 MSTORE PUSH32 0x695AC3AC73F08F202284FFE563CEFE798EE2878A5E04219522E2E99EB89D168 PUSH2 0x280 PUSH2 0x3C0 LOG1 STOP JUMPDEST PUSH4 0xA959CBB DUP2 EQ ISZERO PUSH2 0x1112 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x10DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x160 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x23B872DD DUP2 EQ ISZERO PUSH2 0x1247 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x112E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x113E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD LT ISZERO PUSH2 0x12F JUMPI PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x44 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x11AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE CALLER PUSH1 0x4 CALLDATALOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x160 LOG3 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x160 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 POP PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x95EA7B3 DUP2 EQ ISZERO PUSH2 0x12C0 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x39509351 DUP2 EQ ISZERO PUSH2 0x136D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x12DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xA457C2D7 DUP2 EQ ISZERO PUSH2 0x1418 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1389 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x13B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x4 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD CALLER PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x140 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x9FD5A6CF DUP2 EQ ISZERO PUSH2 0x1815 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1444 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x61 PUSH1 0x84 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x140 CALLDATACOPY PUSH1 0x41 PUSH1 0x84 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT ISZERO PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 CALLDATALOAD XOR PUSH2 0x1473 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 CALLDATALOAD ISZERO ISZERO PUSH2 0x1483 JUMPI PUSH1 0x1 PUSH2 0x148A JUMP JUMPDEST TIMESTAMP PUSH1 0x64 CALLDATALOAD LT ISZERO JUMPDEST PUSH2 0x1493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x1E0 MSTORE PUSH1 0x0 PUSH1 0x2 PUSH2 0x520 MSTORE PUSH32 0x191000000000000000000000000000000 PUSH2 0x540 MSTORE PUSH2 0x520 PUSH1 0x2 DUP1 PUSH1 0x20 DUP5 PUSH2 0x780 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH1 0x19 SLOAD PUSH1 0x20 DUP3 PUSH2 0x780 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F6037FEF10105FA2FAAE126114A169C64845D6126C9 PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x4 CALLDATALOAD PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1E0 MLOAD PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x64 CALLDATALOAD PUSH1 0x20 DUP3 PUSH2 0x680 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x680 MSTORE PUSH2 0x680 SWAP1 POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH1 0x20 DUP3 PUSH2 0x780 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x780 MSTORE PUSH2 0x780 SWAP1 POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD SHA3 SWAP1 POP PUSH2 0x20 MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x20 DUP3 MOD PUSH2 0x30 ADD PUSH2 0x140 MLOAD DUP3 DUP5 ADD GT ISZERO PUSH2 0x15ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x41 DUP1 PUSH2 0x320 DUP3 PUSH1 0x20 PUSH1 0x20 DUP9 MOD DUP9 SUB ADD PUSH2 0x140 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP2 DUP2 MSTORE DUP1 SWAP1 POP SWAP1 POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x162B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x1639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x220 MSTORE PUSH1 0x20 PUSH1 0x20 PUSH1 0x20 DUP3 MOD PUSH2 0x320 ADD PUSH2 0x140 MLOAD DUP3 DUP5 ADD GT ISZERO PUSH2 0x166B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x41 DUP1 PUSH2 0x340 DUP3 PUSH1 0x20 PUSH1 0x20 DUP9 MOD DUP9 SUB ADD PUSH2 0x140 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP2 DUP2 MSTORE DUP1 SWAP1 POP SWAP1 POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x16B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x240 MSTORE PUSH1 0x40 PUSH1 0x1 PUSH1 0x20 DUP3 MOD PUSH2 0x340 ADD PUSH2 0x140 MLOAD DUP3 DUP5 ADD GT ISZERO PUSH2 0x16E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x41 DUP1 PUSH2 0x360 DUP3 PUSH1 0x20 PUSH1 0x20 DUP9 MOD DUP9 SUB ADD PUSH2 0x140 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP2 DUP2 MSTORE DUP1 SWAP1 POP SWAP1 POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x1735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x20 MLOAD PUSH2 0x280 MSTORE PUSH2 0x260 MLOAD PUSH2 0x2A0 MSTORE PUSH2 0x220 MLOAD PUSH2 0x2C0 MSTORE PUSH2 0x240 MLOAD PUSH2 0x2E0 MSTORE PUSH1 0x20 PUSH1 0xC0 PUSH1 0x80 PUSH2 0x280 PUSH1 0x1 GAS STATICCALL POP PUSH1 0xC0 MLOAD EQ PUSH2 0x1787 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SSTORE PUSH2 0x1E0 MLOAD PUSH1 0x1 DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x17BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH1 0x18 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x280 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD314C0F7B2291E5B20AC8C7C3B925 PUSH1 0x20 PUSH2 0x280 LOG3 PUSH1 0x1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1E1D114 DUP2 EQ ISZERO PUSH2 0x183B JUMPI PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xD0E3DB0 DUP2 EQ ISZERO PUSH2 0x1876 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x18D0 JUMP JUMPDEST PUSH4 0xB6B55F25 DUP2 EQ ISZERO PUSH2 0x1897 JUMPI CALLER PUSH2 0x160 MSTORE PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x18D0 JUMP JUMPDEST PUSH4 0x6E553F65 DUP2 EQ ISZERO PUSH2 0x18CB JUMPI PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x18BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x24 PUSH2 0x160 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x18D0 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x1A SLOAD ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1A SSTORE PUSH1 0xD SLOAD ISZERO PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ADDRESS PUSH2 0x1A0 MSTORE PUSH1 0x0 PUSH2 0x1C0 MSTORE PUSH1 0x0 PUSH2 0x180 MSTORE PUSH2 0x180 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x1A0 ADD MLOAD PUSH2 0x160 MLOAD EQ ISZERO PUSH2 0x192E JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x193E JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x19F JUMPI JUMPDEST POP POP POP PUSH2 0x180 MLOAD ISZERO PUSH2 0x194F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x180 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x180 MLOAD EQ ISZERO PUSH2 0x1A19 JUMPI PUSH1 0xE SLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x19BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x20 PUSH2 0x240 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x1C0 MSTORE CALLER PUSH2 0x1E0 MSTORE PUSH2 0x1DC PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x19E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x19F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x240 MLOAD DUP1 DUP3 GT ISZERO PUSH2 0x1AA JUMPI DUP1 PUSH2 0x1AC JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x180 MSTORE PUSH2 0x1A6A JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x1A58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP GT ISZERO PUSH2 0x1A6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x180 MLOAD GT PUSH2 0x1A7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x160 MLOAD PUSH2 0x1C0 MSTORE PUSH2 0x180 MLOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4493 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x240 MLOAD PUSH2 0x1A0 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH1 0x6 SLOAD PUSH2 0x1C0 MSTORE CALLER PUSH2 0x1E0 MSTORE ADDRESS PUSH2 0x20 MSTORE PUSH2 0x180 MLOAD PUSH2 0x220 MSTORE PUSH2 0x220 MLOAD PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4053 JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH2 0x1A0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x1A SSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x75DE292 DUP2 EQ ISZERO PUSH2 0x1C8C JUMPI PUSH1 0x20 PUSH2 0x1E0 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x160 MSTORE ADDRESS PUSH2 0x180 MSTORE PUSH2 0x17C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x1B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x1B6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1E0 MLOAD PUSH2 0x20 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MSTORE PUSH2 0x220 MLOAD PUSH1 0x6 PC ADD PUSH2 0x465E JUMP JUMPDEST PUSH2 0x280 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x280 MLOAD PUSH2 0x140 MSTORE PUSH2 0x180 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x180 MLOAD PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD ISZERO ISZERO PUSH2 0x1C0 JUMPI PUSH2 0x1C7D JUMP JUMPDEST PUSH2 0x140 DUP1 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PUSH1 0xB PUSH2 0x160 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH2 0x1A0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x465E JUMP JUMPDEST PUSH2 0x20 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x20 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x1C62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 MSTORE POP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x1BDD JUMPI JUMPDEST POP POP PUSH2 0x140 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x3CCFD6B DUP2 EQ ISZERO PUSH2 0x1CCD JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH1 0x1 PUSH2 0x180 MSTORE PUSH2 0x1D6E JUMP JUMPDEST PUSH4 0x2E1A7D4D DUP2 EQ ISZERO PUSH2 0x1CF4 JUMPI CALLER PUSH2 0x160 MSTORE PUSH1 0x1 PUSH2 0x180 MSTORE PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x1D6E JUMP JUMPDEST PUSH3 0xF714CE DUP2 EQ ISZERO PUSH2 0x1D2D JUMPI PUSH1 0x1 PUSH2 0x180 MSTORE PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1D1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x24 PUSH2 0x160 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x1D6E JUMP JUMPDEST PUSH4 0xE63697C8 DUP2 EQ ISZERO PUSH2 0x1D69 JUMPI PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x1D51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x24 PUSH2 0x160 CALLDATACOPY PUSH1 0x20 PUSH1 0x44 PUSH2 0x180 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x1D6E JUMP JUMPDEST PUSH2 0x237B JUMP JUMPDEST PUSH1 0x1A SLOAD ISZERO PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1A SSTORE PUSH2 0x140 MLOAD PUSH2 0x1A0 MSTORE PUSH2 0x2710 PUSH2 0x180 MLOAD GT ISZERO PUSH2 0x1D9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1A0 MLOAD EQ ISZERO PUSH2 0x1DD9 JUMPI PUSH1 0x3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x1A0 MSTORE JUMPDEST PUSH1 0x3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x1A0 MLOAD GT ISZERO PUSH2 0x1DF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A0 MLOAD GT PUSH2 0x1E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1E0 MSTORE PUSH2 0x1E0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x45DD JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x240 MLOAD PUSH2 0x1C0 MSTORE PUSH1 0x20 PUSH2 0x260 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x1E0 MSTORE ADDRESS PUSH2 0x20 MSTORE PUSH2 0x1FC PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x1E76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x1E83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x2296 JUMPI PUSH1 0x0 PUSH2 0x280 MSTORE PUSH2 0x2C0 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x2C0 MLOAD PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x2A0 MSTORE PUSH2 0x2A0 MLOAD ISZERO ISZERO PUSH2 0x1EC9 JUMPI PUSH2 0x214E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x380 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x30 MSTORE ADDRESS PUSH2 0x320 MSTORE PUSH2 0x31C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x1EEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x380 MLOAD PUSH2 0x2E0 MSTORE PUSH2 0x2E0 MLOAD PUSH2 0x1C0 MLOAD GT ISZERO ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x214E JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH2 0x2E0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x30 MSTORE PUSH2 0x30 MLOAD PUSH1 0x6 PUSH1 0xB PUSH2 0x2A0 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x1F6A JUMPI DUP1 PUSH2 0x1F6C JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x30 MSTORE PUSH2 0x30 MLOAD ISZERO ISZERO PUSH2 0x1F83 JUMPI PUSH2 0x213E JUMP JUMPDEST PUSH1 0x20 PUSH2 0x3C0 PUSH1 0x24 PUSH4 0x2E1A7D4D PUSH2 0x340 MSTORE PUSH2 0x30 MLOAD PUSH2 0x360 MSTORE PUSH2 0x35C PUSH1 0x0 PUSH2 0x2A0 MLOAD GAS CALL PUSH2 0x1FAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x1FBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x3C0 MLOAD PUSH2 0x320 MSTORE PUSH1 0x20 PUSH2 0x3E0 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x360 MSTORE ADDRESS PUSH2 0x380 MSTORE PUSH2 0x37C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x1FED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x1FFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x3E0 MLOAD PUSH2 0x2E0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x2012 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x340 MSTORE PUSH1 0x0 PUSH2 0x320 MLOAD GT ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x1C0 DUP1 MLOAD PUSH2 0x320 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x203F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 MSTORE POP PUSH2 0x280 DUP1 MLOAD PUSH2 0x320 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x2061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 MSTORE POP PUSH2 0x140 PUSH2 0x360 MSTORE JUMPDEST PUSH2 0x360 MLOAD MLOAD PUSH1 0x20 PUSH2 0x360 MLOAD ADD PUSH2 0x360 MSTORE PUSH2 0x360 PUSH2 0x360 MLOAD LT ISZERO PUSH2 0x2095 JUMPI PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x2A0 MLOAD PUSH2 0x380 MSTORE PUSH2 0x320 MLOAD PUSH2 0x3A0 MSTORE PUSH2 0x3A0 MLOAD PUSH2 0x380 MLOAD PUSH1 0x6 PC ADD PUSH2 0x46F6 JUMP JUMPDEST PUSH2 0x340 PUSH2 0x360 MSTORE JUMPDEST PUSH2 0x360 MLOAD MSTORE PUSH1 0x20 PUSH2 0x360 MLOAD SUB PUSH2 0x360 MSTORE PUSH2 0x140 PUSH2 0x360 MLOAD LT ISZERO ISZERO PUSH2 0x20E1 JUMPI PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x0 POP JUMPDEST PUSH1 0x6 PUSH1 0xB PUSH2 0x2A0 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH2 0x340 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x2114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x10 DUP1 SLOAD PUSH2 0x340 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x2133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x1EA6 JUMPI JUMPDEST POP POP PUSH1 0x20 PUSH2 0x340 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x2C0 MSTORE ADDRESS PUSH2 0x2E0 MSTORE PUSH2 0x2DC PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x2176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x2183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x340 MLOAD PUSH2 0x2A0 MSTORE PUSH2 0x2A0 MLOAD PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x2240 JUMPI PUSH2 0x2A0 MLOAD PUSH2 0x1C0 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x260 MLOAD PUSH2 0x280 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x280 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x21EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH2 0x2C0 MSTORE PUSH2 0x2C0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x465E JUMP JUMPDEST PUSH2 0x320 MSTORE PUSH2 0x2A0 MSTORE PUSH2 0x280 MSTORE PUSH2 0x260 MSTORE PUSH2 0x240 MSTORE PUSH2 0x220 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x320 MLOAD PUSH2 0x1A0 MSTORE JUMPDEST PUSH2 0x180 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x280 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x225B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x2276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x280 MLOAD GT ISZERO PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x22AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x3 CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x22D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x1A0 MLOAD PUSH2 0x1E0 MSTORE PUSH1 0x0 CALLER PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x1E0 LOG3 PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 SLOAD PUSH2 0x1E0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x20 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x220 MSTORE PUSH2 0x220 MLOAD PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH2 0x1C0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x1A SSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x9953B6 DUP2 EQ ISZERO PUSH2 0x23BE JUMPI PUSH1 0x4E PUSH1 0x2 SLOAD LT PUSH2 0x2396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xA EXP PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x45DD JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x1A0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x14B4E26E DUP2 EQ ISZERO PUSH2 0x25EC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x23DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD ISZERO PUSH2 0x23F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xD SLOAD ISZERO PUSH2 0x23FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 CALLDATALOAD XOR PUSH2 0x241C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD ISZERO PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH2 0x1A0 PUSH1 0x4 PUSH4 0xFBFA77CF PUSH2 0x140 MSTORE PUSH2 0x15C PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x2463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x2470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1A0 MLOAD ADDRESS EQ PUSH2 0x2482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH2 0x1A0 PUSH1 0x4 PUSH4 0x1F1FCD51 PUSH2 0x140 MSTORE PUSH2 0x15C PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x24A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x24B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1A0 MLOAD PUSH1 0x6 SLOAD EQ PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2710 PUSH1 0xF SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x24DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP GT ISZERO PUSH2 0x24EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD GT ISZERO PUSH2 0x24FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 PUSH1 0x84 CALLDATALOAD GT ISZERO PUSH2 0x2510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH1 0x84 CALLDATALOAD DUP2 SSTORE TIMESTAMP PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x4 DUP3 ADD SSTORE TIMESTAMP PUSH1 0x5 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD SSTORE POP PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x160 MSTORE PUSH1 0x64 CALLDATALOAD PUSH2 0x180 MSTORE PUSH1 0x84 CALLDATALOAD PUSH2 0x1A0 MSTORE PUSH1 0x4 CALLDATALOAD PUSH32 0x5A6ABD2AF9FE6C554FA8649E2D86E4393FF19DC34D072D38D295C9291D4DC PUSH1 0x80 PUSH2 0x140 LOG2 PUSH1 0xF DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x25C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x4 CALLDATALOAD PUSH1 0x13 PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x6 PC ADD PUSH2 0x489E JUMP JUMPDEST PUSH1 0x0 POP STOP JUMPDEST PUSH4 0x7C6A4F24 DUP2 EQ ISZERO PUSH2 0x2749 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0x2647 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x2657 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x262B JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0x2667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x268F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x2 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x26BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x24 CALLDATALOAD PUSH1 0x2 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x26FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x2710 PUSH1 0xF SLOAD GT ISZERO PUSH2 0x2716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH32 0xBDA9398315C83CCEF012BCAA318A2FF7B680F36429D36597BD4BC25AC11EAD59 PUSH1 0x20 PUSH2 0x140 LOG2 STOP JUMPDEST PUSH4 0xE722BEFE DUP2 EQ ISZERO PUSH2 0x2868 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2765 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0x27A4 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x27B4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x2788 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0x27C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x27EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD LT ISZERO PUSH2 0x2816 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x3 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH32 0xB728AD785976532C4AAADDE9B1CBA5F262A79E83C62D2377BC405678B29C PUSH1 0x20 PUSH2 0x140 LOG2 STOP JUMPDEST PUSH4 0x4757A156 DUP2 EQ ISZERO PUSH2 0x2987 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2884 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0x28C3 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x28D3 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x28A7 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0x28E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x3 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT ISZERO PUSH2 0x2935 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH32 0x1796A8E076E2DE5B72E7BF64FCCB7666C48CEAB94CB6CAE7CB7EFF4B6F641AB PUSH1 0x20 PUSH2 0x140 LOG2 STOP JUMPDEST PUSH4 0xD0194ED6 DUP2 EQ ISZERO PUSH2 0x2A39 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x29A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x29B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 PUSH1 0x24 CALLDATALOAD GT ISZERO PUSH2 0x29C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x29EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x140 MSTORE PUSH1 0x4 CALLDATALOAD PUSH32 0xE57488A65FA53066D4C25BAC90DB47DDA4E5DE3025AC12BF76FF7211CF7F39E PUSH1 0x20 PUSH2 0x140 LOG2 STOP JUMPDEST PUSH4 0x6CB56D19 DUP2 EQ ISZERO PUSH2 0x2D51 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2A65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x2A73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x24 CALLDATALOAD XOR PUSH2 0x2A82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x2AAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD ISZERO PUSH2 0x2AD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0x20 ADD MSTORE PUSH1 0x2 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0x40 ADD MSTORE PUSH1 0x3 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0x60 ADD MSTORE PUSH1 0x4 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0x80 ADD MSTORE PUSH1 0x5 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0xA0 ADD MSTORE PUSH1 0x6 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0xC0 ADD MSTORE PUSH1 0x7 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH1 0xE0 ADD MSTORE PUSH1 0x8 DUP2 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP3 PUSH2 0x10 ADD MSTORE POP POP PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x220 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0xF DUP1 SLOAD PUSH2 0x180 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x2BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x6 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0xB PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH2 0x140 MLOAD DUP2 SSTORE PUSH2 0x1E0 MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x180 MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x1A0 MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH2 0x1C0 MLOAD PUSH1 0x4 DUP3 ADD SSTORE PUSH2 0x1E0 MLOAD PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x20 MLOAD PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x7 DUP3 ADD SSTORE PUSH1 0x0 PUSH1 0x8 DUP3 ADD SSTORE POP PUSH1 0x4 CALLDATALOAD EXTCODESIZE PUSH2 0x2C90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 PUSH1 0x24 PUSH4 0xCE5494BB PUSH2 0x260 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x280 MSTORE PUSH2 0x27C PUSH1 0x0 PUSH1 0x4 CALLDATALOAD GAS CALL PUSH2 0x2CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH32 0x10B69BB6B504E1252E36B375233158EDEE64D71B399E2F81473A695FD1B021 PUSH1 0x0 PUSH1 0x0 LOG3 PUSH2 0x260 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x260 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD EQ ISZERO PUSH2 0x2D3D JUMPI PUSH1 0x24 CALLDATALOAD PUSH2 0x260 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x2D2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x0 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x2CF1 JUMPI JUMPDEST POP POP STOP JUMPDEST PUSH4 0xA0E4AF9A DUP2 EQ ISZERO PUSH2 0x2D67 JUMPI CALLER PUSH2 0x140 MSTORE PUSH2 0x2D98 JUMP JUMPDEST PUSH4 0xBB994D48 DUP2 EQ ISZERO PUSH2 0x2D93 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2D83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x2D98 JUMP JUMPDEST PUSH2 0x2E4A JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x180 MSTORE PUSH1 0x7 SLOAD PUSH2 0x1A0 MSTORE PUSH1 0x9 SLOAD PUSH2 0x1C0 MSTORE PUSH1 0x0 PUSH2 0x160 MSTORE PUSH2 0x160 PUSH2 0x120 PUSH1 0x0 PUSH1 0x3 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x180 ADD MLOAD CALLER EQ ISZERO PUSH2 0x2DDF JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x2DEF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x2DC3 JUMPI JUMPDEST POP POP POP PUSH2 0x160 MLOAD PUSH2 0x2DFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD XOR PUSH2 0x2E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4981 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP STOP JUMPDEST PUSH4 0xF76E4CAA DUP2 EQ ISZERO PUSH2 0x2FC6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2E66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0x2EA5 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x2EB5 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x2E89 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0x2EC5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x2EED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x180 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x180 MLOAD PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD ISZERO ISZERO PUSH2 0x2F22 JUMPI PUSH2 0x2F64 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x160 MLOAD XOR PUSH2 0x2F33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 DUP1 MLOAD PUSH1 0x1 DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x2F49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 MSTORE POP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x2EFF JUMPI JUMPDEST POP POP PUSH1 0x14 PUSH2 0x140 MLOAD LT PUSH2 0x2F76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x13 PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x489E JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x4 CALLDATALOAD PUSH32 0xA8727D412C6FA1E2497D6D6F275E2D9FE4D9318D5B793632E6AD9D38EE8F1FA PUSH1 0x0 PUSH1 0x0 LOG2 STOP JUMPDEST PUSH4 0xB22439F5 DUP2 EQ ISZERO PUSH2 0x30ED JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x2FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x160 MSTORE PUSH1 0x7 SLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x140 MSTORE PUSH2 0x140 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x160 ADD MLOAD CALLER EQ ISZERO PUSH2 0x3021 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x3031 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x305 JUMPI JUMPDEST POP POP POP PUSH2 0x140 MLOAD PUSH2 0x3041 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x140 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x3061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD EQ ISZERO PUSH2 0x30D5 JUMPI PUSH1 0x0 PUSH2 0x140 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x3086 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x489E JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH1 0x4 CALLDATALOAD PUSH32 0x8E1EC3C16D6A67EA8EFFE2AC7ADEF9C2DEBC0DC47C49CDF18F6A8B048085BE PUSH1 0x0 PUSH1 0x0 LOG2 PUSH1 0x0 PUSH1 0x0 RETURN JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x304D JUMPI JUMPDEST POP POP PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xBF3759B5 DUP2 EQ ISZERO PUSH2 0x313 JUMPI CALLER PUSH2 0x140 MSTORE PUSH2 0x3134 JUMP JUMPDEST PUSH4 0xBDCF36BB DUP2 EQ ISZERO PUSH2 0x312F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x311F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x3134 JUMP JUMPDEST PUSH2 0x3162 JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4A10 JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x112C1F9B DUP2 EQ ISZERO PUSH2 0x3178 JUMPI CALLER PUSH2 0x140 MSTORE PUSH2 0x31A9 JUMP JUMPDEST PUSH4 0xD7648013 DUP2 EQ ISZERO PUSH2 0x31A4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x31A9 JUMP JUMPDEST PUSH2 0x31D7 JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4B41 JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x153C27C4 DUP2 EQ ISZERO PUSH2 0x3247 JUMPI PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH1 0xE SLOAD GT ISZERO PUSH2 0x323A JUMPI PUSH1 0xE SLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x3226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN PUSH2 0x3245 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST STOP JUMPDEST PUSH4 0xD3406ABD DUP2 EQ ISZERO PUSH2 0x325D JUMPI CALLER PUSH2 0x140 MSTORE PUSH2 0x328E JUMP JUMPDEST PUSH4 0x33586B67 DUP2 EQ ISZERO PUSH2 0x3289 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x4 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x328E JUMP JUMPDEST PUSH2 0x32BC JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4D9C JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1C0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xA1D9BAFC DUP2 EQ ISZERO PUSH2 0x3875 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD GT PUSH2 0x32EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x44 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH1 0x20 PUSH2 0x1C0 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x140 MSTORE CALLER PUSH2 0x160 MSTORE PUSH2 0x15C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x3330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x333D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1C0 MLOAD LT ISZERO PUSH2 0x334F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x24 CALLDATALOAD GT ISZERO PUSH2 0x337B JUMPI CALLER PUSH2 0x140 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x160 MSTORE PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x46F6 JUMP JUMPDEST PUSH1 0x0 POP JUMPDEST PUSH2 0x140 MLOAD CALLER PUSH2 0x160 MSTORE PUSH1 0x4 CALLDATALOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4EEF JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x140 MSTORE PUSH1 0x7 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x33D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD CALLER PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4B41 JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1E0 MLOAD PUSH2 0x160 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD CALLER PUSH2 0x1A0 MSTORE PUSH2 0x1A0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4A10 JUMP JUMPDEST PUSH2 0x20 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x20 MLOAD PUSH2 0x180 MSTORE PUSH1 0x44 CALLDATALOAD PUSH2 0x180 MLOAD DUP1 DUP3 GT ISZERO PUSH2 0x345C JUMPI DUP1 PUSH2 0x345E JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x1A0 MSTORE PUSH1 0x0 PUSH2 0x1A0 MLOAD GT ISZERO PUSH2 0x34E8 JUMPI PUSH1 0x6 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x349E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x10 DUP1 SLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x34BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x180 DUP1 MLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x34DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 MSTORE POP JUMPDEST PUSH1 0x0 PUSH2 0x160 MLOAD GT ISZERO PUSH2 0x354E JUMPI PUSH1 0x6 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH2 0x160 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x3522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x10 DUP1 SLOAD PUSH2 0x160 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x3543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x1A0 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x3564 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH2 0x1C0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1C0 MLOAD LT ISZERO PUSH2 0x35EE JUMPI PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 SLOAD PUSH2 0x1E0 MSTORE CALLER PUSH2 0x20 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x35B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x220 MLOAD PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP PUSH2 0x3672 JUMP JUMPDEST PUSH2 0x160 MLOAD PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x3672 JUMPI PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 SLOAD PUSH2 0x1E0 MSTORE CALLER PUSH2 0x20 MSTORE ADDRESS PUSH2 0x220 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x160 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x3636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x240 MSTORE PUSH2 0x240 MLOAD PUSH2 0x220 MLOAD PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4053 JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4372 JUMP JUMPDEST PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x20 MLOAD PUSH1 0x4 CALLDATALOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x36C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH2 0x140 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x36DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x1E0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH2 0x1E0 MLOAD GT ISZERO PUSH2 0x3718 JUMPI PUSH2 0x1E0 MLOAD PUSH1 0x24 CALLDATALOAD DUP1 DUP3 LT ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x13 SSTORE PUSH2 0x371E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 SSTORE JUMPDEST TIMESTAMP PUSH1 0x5 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE TIMESTAMP PUSH1 0x11 SSTORE PUSH1 0x40 PUSH1 0x4 PUSH2 0x20 CALLDATACOPY PUSH2 0x1A0 MLOAD PUSH2 0x240 MSTORE PUSH1 0x7 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x260 MSTORE PUSH1 0x8 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x280 MSTORE PUSH1 0x6 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x2A0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x2C0 MSTORE PUSH1 0x2 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x2E0 MSTORE CALLER PUSH32 0x67F96D2854A335A4CADB49F84FD3CA6F99744DDB3FECEEB4B349D2D53D32AD3 PUSH2 0x10 PUSH2 0x20 LOG2 PUSH1 0x2 PUSH1 0xB CALLER PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD ISZERO ISZERO PUSH2 0x381D JUMPI PUSH1 0x1 PUSH2 0x3821 JUMP JUMPDEST PUSH1 0xD SLOAD JUMPDEST ISZERO PUSH2 0x3866 JUMPI PUSH1 0x20 PUSH2 0x260 PUSH1 0x4 PUSH4 0xEFBB5CB0 PUSH2 0x20 MSTORE PUSH2 0x21C CALLER GAS STATICCALL PUSH2 0x3845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x3852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x260 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN PUSH2 0x3873 JUMP JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST STOP JUMPDEST PUSH4 0x1681A62 DUP2 EQ ISZERO PUSH2 0x38AB JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x140 MSTORE PUSH2 0x38CC JUMP JUMPDEST PUSH4 0x6EA056A9 DUP2 EQ ISZERO PUSH2 0x38C7 JUMPI PUSH1 0x20 PUSH1 0x24 PUSH2 0x140 CALLDATACOPY PUSH1 0x0 POP PUSH2 0x38CC JUMP JUMPDEST PUSH2 0x39AC JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x38DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x7 SLOAD CALLER EQ PUSH2 0x38EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x4 CALLDATALOAD XOR PUSH2 0x38FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x160 MLOAD EQ ISZERO PUSH2 0x396C JUMPI PUSH1 0x20 PUSH2 0x20 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x180 MSTORE ADDRESS PUSH2 0x1A0 MSTORE PUSH2 0x19C PUSH1 0x4 CALLDATALOAD GAS STATICCALL PUSH2 0x3953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x3960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x20 MLOAD PUSH2 0x160 MSTORE JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x180 MSTORE PUSH1 0x7 SLOAD PUSH2 0x1A0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1C0 MSTORE PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP STOP JUMPDEST PUSH4 0x6FDDE3 DUP2 EQ ISZERO PUSH2 0x3A51 JUMPI PUSH1 0x0 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH2 0x180 PUSH1 0x20 DUP3 SLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x3 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x39EA JUMPI PUSH2 0x3AC JUMP JUMPDEST PUSH2 0x120 MLOAD DUP6 ADD SLOAD PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x39D7 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x180 MLOAD DUP1 PUSH2 0x1A0 ADD DUP2 DUP3 PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP SUB CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x20 PUSH2 0x160 MSTORE PUSH1 0x40 PUSH2 0x180 MLOAD ADD PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP PUSH2 0x160 RETURN JUMPDEST PUSH4 0x95D89B41 DUP2 EQ ISZERO PUSH2 0x3AF6 JUMPI PUSH1 0x1 DUP1 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 PUSH2 0x180 PUSH1 0x20 DUP3 SLOAD ADD PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST DUP3 PUSH2 0x120 MLOAD PUSH1 0x20 MUL GT ISZERO PUSH2 0x3A8F JUMPI PUSH2 0x3AB1 JUMP JUMPDEST PUSH2 0x120 MLOAD DUP6 ADD SLOAD PUSH2 0x120 MLOAD PUSH1 0x20 MUL DUP6 ADD MSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x3A7C JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0x180 MLOAD DUP1 PUSH2 0x1A0 ADD DUP2 DUP3 PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP SUB CALLDATASIZE DUP3 CALLDATACOPY POP POP PUSH1 0x20 PUSH2 0x160 MSTORE PUSH1 0x40 PUSH2 0x180 MLOAD ADD PUSH1 0x20 PUSH1 0x1 DUP3 SUB MOD PUSH1 0x1F DUP3 ADD SUB SWAP1 POP PUSH2 0x160 RETURN JUMPDEST PUSH4 0x313CE567 DUP2 EQ ISZERO PUSH2 0x3BE JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x70A08231 DUP2 EQ ISZERO PUSH2 0x3B44 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xDD62ED3E DUP2 EQ ISZERO PUSH2 0x3B98 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3B60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0x24 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x1816DDD DUP2 EQ ISZERO PUSH2 0x3BB0 JUMPI PUSH1 0x5 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xFCC546A DUP2 EQ ISZERO PUSH2 0x3BC8 JUMPI PUSH1 0x6 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x5AA6E675 DUP2 EQ ISZERO PUSH2 0x3BE0 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x88A8D62 DUP2 EQ ISZERO PUSH2 0x3BF8 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x452A9320 DUP2 EQ ISZERO PUSH2 0x3C10 JUMPI PUSH1 0x9 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x39EBF823 DUP2 EQ ISZERO PUSH2 0x3D2A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3C2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH2 0x140 DUP1 DUP1 DUP1 DUP5 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x1 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x2 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x3 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x4 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x5 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x6 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x7 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x8 DUP6 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP2 MSTORE POP POP PUSH2 0x120 SWAP1 POP SWAP1 POP PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD PUSH2 0x140 RETURN JUMPDEST PUSH4 0xC822ADDA DUP2 EQ ISZERO PUSH2 0x3D5B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x14 DUP2 LT PUSH2 0x3D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x343C2FC DUP2 EQ ISZERO PUSH2 0x3D73 JUMPI PUSH1 0xD SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xECF7858 DUP2 EQ ISZERO PUSH2 0x3D8B JUMPI PUSH1 0xE SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xCEA55F57 DUP2 EQ ISZERO PUSH2 0x3DA3 JUMPI PUSH1 0xF SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xFC7B9C18 DUP2 EQ ISZERO PUSH2 0x3DBB JUMPI PUSH1 0x10 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xC3535B52 DUP2 EQ ISZERO PUSH2 0x3DD3 JUMPI PUSH1 0x11 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x3629C8DE DUP2 EQ ISZERO PUSH2 0x3DEB JUMPI PUSH1 0x12 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x44B81396 DUP2 EQ ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x13 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x42232716 DUP2 EQ ISZERO PUSH2 0x3E1B JUMPI PUSH1 0x14 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x9EC5A894 DUP2 EQ ISZERO PUSH2 0x3E33 JUMPI PUSH1 0x15 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0xA6F7F5D6 DUP2 EQ ISZERO PUSH2 0x3E4B JUMPI PUSH1 0x16 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x87788782 DUP2 EQ ISZERO PUSH2 0x3E63 JUMPI PUSH1 0x17 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x7ECEBE0 DUP2 EQ ISZERO PUSH2 0x3E99 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA0 SHR ISZERO PUSH2 0x3E7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x18 PUSH1 0x4 CALLDATALOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST PUSH4 0x3644E515 DUP2 EQ ISZERO PUSH2 0x3EB1 JUMPI PUSH1 0x19 SLOAD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 RETURN JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH2 0x220 MSTORE PUSH32 0xA959CBB0000000000000000000000000000 PUSH2 0x240 MSTORE PUSH2 0x220 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x280 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x160 MLOAD PUSH1 0x20 DUP3 PUSH2 0x280 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180 MLOAD PUSH1 0x20 DUP3 PUSH2 0x280 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x280 MSTORE PUSH2 0x280 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x320 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x3F62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x3E0 PUSH2 0x320 MLOAD PUSH2 0x340 PUSH1 0x0 PUSH2 0x140 MLOAD GAS CALL PUSH2 0x3F81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0x3F92 JUMPI DUP1 PUSH2 0x3F94 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x3C0 MSTORE PUSH2 0x3C0 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x1C0 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x3FB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x404D JUMPI PUSH2 0x1C0 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x3FE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x3FF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO ISZERO ISZERO PUSH2 0x404D JUMPI PUSH4 0x8C379A0 PUSH2 0x220 MSTORE PUSH1 0x20 PUSH2 0x240 MSTORE PUSH1 0x10 PUSH2 0x260 MSTORE PUSH32 0x5472616E73666572206661696C6564210000000000000000 PUSH2 0x280 MSTORE PUSH2 0x260 POP PUSH1 0x64 PUSH2 0x23C REVERT JUMPDEST PUSH2 0x1A0 MLOAD JUMP JUMPDEST PUSH2 0x1C0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE PUSH2 0x1A0 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH2 0x240 MSTORE PUSH32 0x23B872DD0000000000000000000000000000 PUSH2 0x260 MSTORE PUSH2 0x240 PUSH1 0x4 DUP1 PUSH1 0x20 DUP5 PUSH2 0x2A0 ADD ADD DUP3 PUSH1 0x20 DUP6 ADD PUSH1 0x0 PUSH1 0x4 GAS CALL POP POP DUP1 MLOAD DUP3 ADD SWAP2 POP POP PUSH2 0x160 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2A0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x180 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2A0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A0 MLOAD PUSH1 0x20 DUP3 PUSH2 0x2A0 ADD ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP DUP1 PUSH2 0x2A0 MSTORE PUSH2 0x2A0 SWAP1 POP DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x360 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x4113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x20 PUSH2 0x440 PUSH2 0x360 MLOAD PUSH2 0x380 PUSH1 0x0 PUSH2 0x140 MLOAD GAS CALL PUSH2 0x4132 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP1 DUP3 GT ISZERO PUSH2 0x4143 JUMPI DUP1 PUSH2 0x4145 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x420 MSTORE PUSH2 0x420 DUP1 MLOAD PUSH1 0x20 ADD DUP1 PUSH2 0x1E0 DUP3 DUP5 PUSH1 0x0 PUSH1 0x4 GAS CALL PUSH2 0x416A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH2 0x1E0 MLOAD GT ISZERO PUSH2 0x41FE JUMPI PUSH2 0x1E0 DUP1 PUSH1 0x20 ADD MLOAD PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 SWAP1 SGT ISZERO PUSH2 0x4193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 SWAP1 SLT ISZERO PUSH2 0x41A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x20 SUB PUSH2 0x10 EXP DUP3 DIV SWAP1 POP SWAP1 POP SWAP1 POP ISZERO ISZERO ISZERO ISZERO PUSH2 0x41FE JUMPI PUSH4 0x8C379A0 PUSH2 0x240 MSTORE PUSH1 0x20 PUSH2 0x260 MSTORE PUSH1 0x10 PUSH2 0x280 MSTORE PUSH32 0x5472616E73666572206661696C6564210000000000000000 PUSH2 0x2A0 MSTORE PUSH2 0x280 POP PUSH1 0x64 PUSH2 0x25C REVERT JUMPDEST PUSH2 0x1C0 MLOAD JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH2 0x180 MSTORE ADDRESS PUSH2 0x1E0 MSTORE PUSH1 0x0 PUSH2 0x20 MSTORE PUSH1 0x0 PUSH2 0x1C0 MSTORE PUSH2 0x1C0 PUSH2 0x120 PUSH1 0x0 PUSH1 0x2 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x20 MUL PUSH2 0x1E0 ADD MLOAD PUSH2 0x160 MLOAD EQ ISZERO PUSH2 0x4253 JUMPI PUSH1 0x1 DUP4 MSTORE PUSH2 0x4263 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x4234 JUMPI JUMPDEST POP POP POP PUSH2 0x1C0 MLOAD ISZERO PUSH2 0x4274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH2 0x180 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x3 PUSH2 0x160 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH2 0x180 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x42C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x180 MLOAD PUSH2 0x1C0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x1C0 LOG3 PUSH2 0x1A0 MLOAD JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x20 PUSH2 0x1E0 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x160 MSTORE ADDRESS PUSH2 0x180 MSTORE PUSH2 0x17C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x4339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x4346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x1E0 MLOAD PUSH1 0x10 SLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x435F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x140 MLOAD JUMP JUMPDEST PUSH2 0x140 MSTORE TIMESTAMP PUSH1 0x11 SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x14 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x43A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x160 MSTORE PUSH8 0xDE0B6B3A76400 PUSH2 0x160 MLOAD LT ISZERO PUSH2 0x4425 JUMPI PUSH1 0x13 SLOAD PUSH2 0x180 MSTORE PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x43EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH8 0xDE0B6B3A76400 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP DUP1 DUP3 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x140 MLOAD JUMP PUSH2 0x4433 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x140 MLOAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4372 JUMP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x180 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x140 MLOAD JUMP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH1 0x0 PUSH2 0x1A0 MSTORE PUSH1 0x5 SLOAD PUSH2 0x1C0 MSTORE PUSH1 0x0 PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x452E JUMPI PUSH2 0x160 MLOAD PUSH2 0x1C0 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x44D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1E0 MLOAD DUP1 DUP1 PUSH2 0x451F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x1A0 MSTORE PUSH2 0x4537 JUMP JUMPDEST PUSH2 0x160 MLOAD PUSH2 0x1A0 MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x1A0 MLOAD XOR PUSH2 0x4547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x455E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH1 0x5 SSTORE PUSH1 0x3 PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 DUP1 SLOAD PUSH2 0x1A0 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x458E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x1A0 MLOAD PUSH2 0x1E0 MSTORE PUSH2 0x140 MLOAD PUSH1 0x0 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 PUSH2 0x1E0 LOG3 PUSH2 0x1A0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x180 MLOAD JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x5 SLOAD ISZERO ISZERO PUSH2 0x45FE JUMPI PUSH2 0x140 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x180 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x5 SLOAD DUP1 DUP1 PUSH2 0x464C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4435 JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x180 MSTORE PUSH1 0x0 PUSH2 0x180 MLOAD GT ISZERO PUSH2 0x46E6 JUMPI PUSH2 0x140 MLOAD PUSH1 0x5 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x46BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x180 MLOAD DUP1 DUP1 PUSH2 0x46D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP PUSH2 0x46F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH2 0x160 MLOAD PUSH2 0x1A0 MLOAD LT ISZERO PUSH2 0x4736 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD XOR ISZERO PUSH2 0x485 JUMPI PUSH2 0x160 MLOAD PUSH1 0xF SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x475C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x10 SLOAD DUP1 DUP1 PUSH2 0x4771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 GT ISZERO PUSH2 0x47A2 JUMPI DUP1 PUSH2 0x47A4 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x1C0 MSTORE PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH2 0x1C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x47DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0xF DUP1 SLOAD PUSH2 0x1C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x47FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP JUMPDEST PUSH1 0x8 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD DUP1 SLOAD PUSH2 0x160 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x4836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x1A0 MLOAD PUSH2 0x160 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4855 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x10 DUP1 SLOAD PUSH2 0x160 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x488E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH2 0x180 MLOAD JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH1 0x0 PUSH2 0x160 MSTORE PUSH2 0x180 PUSH1 0x0 PUSH1 0x14 DUP2 DUP4 MSTORE ADD JUMPDEST PUSH2 0x180 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x48C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH2 0x1A0 MLOAD ISZERO ISZERO PUSH2 0x494 JUMPI PUSH2 0x160 DUP1 MLOAD PUSH1 0x1 DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x48F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP DUP2 MSTORE POP PUSH2 0x4969 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 MLOAD GT ISZERO PUSH2 0x4969 JUMPI PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x160 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x14 DUP2 LT PUSH2 0x493D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH1 0x0 PUSH2 0x180 MLOAD PUSH1 0x14 DUP2 LT PUSH2 0x495C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 ADD DUP1 DUP4 MSTORE DUP2 EQ ISZERO PUSH2 0x48B4 JUMPI JUMPDEST POP POP PUSH2 0x140 MLOAD JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x49B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP2 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SSTORE PUSH2 0x140 MLOAD PUSH32 0x421C688D84C1154D321AFAC72F1BFFE9EEF5305C9DE9D03574E71E9B32A PUSH1 0x0 PUSH1 0x0 LOG2 PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0xF SLOAD ISZERO ISZERO PUSH2 0x4A4A JUMPI PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1A0 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4AA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x180 MSTORE PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MSTORE PUSH1 0xD SLOAD ISZERO PUSH2 0x4AF6 JUMPI PUSH2 0x1A0 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP PUSH2 0x4B3F JUMP JUMPDEST PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD GT ISZERO ISZERO PUSH2 0x4B17 JUMPI PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP PUSH2 0x4B3F JUMP JUMPDEST PUSH2 0x1A0 MLOAD PUSH2 0x180 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4B2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0xD SLOAD ISZERO PUSH2 0x4B5F JUMPI PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH1 0x6 PC ADD PUSH2 0x43F JUMP JUMPDEST PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x1A0 MLOAD PUSH2 0x180 MSTORE PUSH1 0xF SLOAD PUSH2 0x180 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4BA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x1A0 MSTORE PUSH1 0x10 SLOAD PUSH2 0x1C0 MSTORE PUSH1 0x2 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x180 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4BF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x1E0 MSTORE PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x20 MSTORE PUSH1 0x3 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x220 MSTORE PUSH1 0x4 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x240 MSTORE PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD GT ISZERO ISZERO PUSH2 0x4C86 JUMPI PUSH1 0x1 PUSH2 0x4C91 JUMP JUMPDEST PUSH2 0x1C0 MLOAD PUSH2 0x1A0 MLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x4CA4 JUMPI PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4CDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x4CF2 JUMPI DUP1 PUSH2 0x4CF4 JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH2 0x260 MLOAD PUSH1 0x20 PUSH2 0x30 PUSH1 0x24 PUSH4 0x70A08231 PUSH2 0x280 MSTORE ADDRESS PUSH2 0x2A0 MSTORE PUSH2 0x29C PUSH1 0x6 SLOAD GAS STATICCALL PUSH2 0x4D26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x4D33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x30 MLOAD DUP1 DUP3 GT ISZERO PUSH2 0x4D48 JUMPI DUP1 PUSH2 0x4D4A JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH2 0x220 MLOAD PUSH2 0x260 MLOAD LT ISZERO PUSH2 0x4D72 JUMPI PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP PUSH2 0x4D9A JUMP JUMPDEST PUSH2 0x260 MLOAD PUSH2 0x240 MLOAD DUP1 DUP3 GT ISZERO PUSH2 0x4D88 JUMPI DUP1 PUSH2 0x4D8A JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x5 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x180 MSTORE TIMESTAMP PUSH2 0x180 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4DD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x1A0 MSTORE PUSH2 0x180 MLOAD PUSH1 0x1 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x1C0 MSTORE PUSH1 0x0 PUSH2 0x1A0 MLOAD GT ISZERO PUSH2 0x4E76 JUMPI PUSH1 0x0 PUSH2 0x1C0 MLOAD GT ISZERO PUSH2 0x4E6E JUMPI PUSH1 0x20 PUSH2 0x2C0 PUSH1 0x4 PUSH4 0x22F3E2D4 PUSH2 0x260 MSTORE PUSH2 0x27C PUSH2 0x140 MLOAD GAS STATICCALL PUSH2 0x4E55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x4E62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x2C0 MLOAD PUSH2 0x4E71 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0x4E79 JUMP JUMPDEST PUSH1 0x0 JUMPDEST ISZERO PUSH2 0x4EDF JUMPI PUSH1 0x7 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH2 0x1A0 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x1C0 MLOAD DUP1 DUP1 PUSH2 0x4EC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP PUSH2 0x4EED JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x160 MLOAD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x180 MSTORE PUSH2 0x140 MSTORE PUSH2 0x160 MSTORE TIMESTAMP PUSH1 0x5 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4F26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x1A0 MSTORE PUSH1 0x0 PUSH2 0x1A0 MLOAD XOR PUSH2 0x4F41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x160 MLOAD ISZERO ISZERO PUSH2 0x4F59 JUMPI PUSH1 0x0 PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x180 MLOAD JUMP JUMPDEST PUSH1 0x6 PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 ADD SLOAD PUSH1 0x20 PUSH2 0x240 PUSH1 0x4 PUSH4 0x8E6350E2 PUSH2 0x1E0 MSTORE PUSH2 0x1FC PUSH2 0x140 MLOAD GAS STATICCALL PUSH2 0x4F98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F RETURNDATASIZE GT PUSH2 0x4FA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 POP PUSH2 0x240 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x4FB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 SUB SWAP1 POP SWAP1 POP PUSH2 0x1A0 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4FD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH1 0x16 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x4FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH4 0x1E18558 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x1C0 MSTORE PUSH2 0x160 MLOAD PUSH1 0xB PUSH2 0x140 MLOAD PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 PUSH1 0xC0 MSTORE PUSH1 0x20 PUSH1 0xC0 SHA3 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x5049 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x1E0 MSTORE PUSH2 0x160 MLOAD PUSH1 0x17 SLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x5079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x2710 DUP1 DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x20 MSTORE PUSH2 0x20 MLOAD PUSH2 0x1E0 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x50A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH2 0x1C0 MLOAD DUP2 DUP2 DUP4 ADD LT ISZERO PUSH2 0x50BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD SWAP1 POP SWAP1 POP PUSH2 0x220 MSTORE PUSH2 0x160 MLOAD PUSH2 0x220 MLOAD GT ISZERO PUSH2 0x50E1 JUMPI PUSH2 0x160 MLOAD PUSH2 0x220 MSTORE JUMPDEST PUSH1 0x0 PUSH2 0x220 MLOAD GT ISZERO PUSH2 0x52BC JUMPI PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD ADDRESS PUSH2 0x260 MSTORE PUSH2 0x220 MLOAD PUSH2 0x280 MSTORE PUSH2 0x280 MLOAD PUSH2 0x260 MLOAD PUSH1 0x6 PC ADD PUSH2 0x4493 JUMP JUMPDEST PUSH2 0x2E0 MSTORE PUSH2 0x240 MSTORE PUSH2 0x220 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH2 0x2E0 MLOAD PUSH2 0x240 MSTORE PUSH1 0x0 PUSH2 0x1E0 MLOAD GT ISZERO PUSH2 0x5225 JUMPI PUSH2 0x1E0 MLOAD PUSH2 0x240 MLOAD DUP1 DUP3 MUL DUP3 ISZERO DUP3 DUP5 DUP4 DIV EQ OR PUSH2 0x5187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP1 POP SWAP1 POP SWAP1 POP PUSH2 0x220 MLOAD DUP1 DUP1 PUSH2 0x519D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DIV SWAP1 POP SWAP1 POP PUSH2 0x260 MSTORE PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD PUSH2 0x260 MLOAD ADDRESS PUSH2 0x280 MSTORE PUSH2 0x140 MLOAD PUSH2 0x2A0 MSTORE PUSH2 0x260 MLOAD PUSH2 0x2C0 MSTORE PUSH2 0x2C0 MLOAD PUSH2 0x2A0 MLOAD PUSH2 0x280 MLOAD PUSH1 0x6 PC ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x260 MSTORE PUSH2 0x240 MSTORE PUSH2 0x220 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP JUMPDEST PUSH1 0x0 PUSH1 0x3 ADDRESS PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD GT ISZERO PUSH2 0x52BC JUMPI PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x1A0 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x20 MLOAD PUSH2 0x220 MLOAD PUSH2 0x240 MLOAD ADDRESS PUSH2 0x260 MSTORE PUSH1 0x15 SLOAD PUSH2 0x280 MSTORE PUSH1 0x3 ADDRESS PUSH1 0xE0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0x40 PUSH1 0xC0 SHA3 SLOAD PUSH2 0x2A0 MSTORE PUSH2 0x2A0 MLOAD PUSH2 0x280 MLOAD PUSH2 0x260 MLOAD PUSH1 0x6 PC ADD PUSH2 0x424 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x220 MSTORE PUSH2 0x20 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x1C0 MSTORE PUSH2 0x1A0 MSTORE PUSH2 0x180 MSTORE PUSH2 0x160 MSTORE PUSH2 0x140 MSTORE PUSH1 0x0 POP JUMPDEST PUSH2 0x220 MLOAD PUSH1 0x0 MSTORE PUSH1 0x0 MLOAD PUSH2 0x180 MLOAD JUMP",
  "sha1": "5901b04b8d2482c08d05e2bfe413e26742bad77b",
  "source": "# @version 0.2.12\n\"\"\"\n@title Yearn Token Vault\n@license GNU AGPLv3\n@author yearn.finance\n@notice\n    Yearn Token Vault. Holds an underlying token, and allows users to interact\n    with the Yearn ecosystem through Strategies connected to the Vault.\n    Vaults are not limited to a single Strategy, they can have as many Strategies\n    as can be designed (however the withdrawal queue is capped at 20.)\n\n    Deposited funds are moved into the most impactful strategy that has not\n    already reached its limit for assets under management, regardless of which\n    Strategy a user's funds end up in, they receive their portion of yields\n    generated across all Strategies.\n\n    When a user withdraws, if there are no funds sitting undeployed in the\n    Vault, the Vault withdraws funds from Strategies in the order of least\n    impact. (Funds are taken from the Strategy that will disturb everyone's\n    gains the least, then the next least, etc.) In order to achieve this, the\n    withdrawal queue's order must be properly set and managed by the community\n    (through governance).\n\n    Vault Strategies are parameterized to pursue the highest risk-adjusted yield.\n\n    There is an \"Emergency Shutdown\" mode. When the Vault is put into emergency\n    shutdown, assets will be recalled from the Strategies as quickly as is\n    practical (given on-chain conditions), minimizing loss. Deposits are\n    halted, new Strategies may not be added, and each Strategy exits with the\n    minimum possible damage to position, while opening up deposits to be\n    withdrawn by users. There are no restrictions on withdrawals above what is\n    expected under Normal Operation.\n\n    For further details, please refer to the specification:\n    https://github.com/iearn-finance/yearn-vaults/blob/main/SPECIFICATION.md\n\"\"\"\n\nAPI_VERSION: constant(String[28]) = \"0.4.3\"\n\nfrom vyper.interfaces import ERC20\n\nimplements: ERC20\n\n\ninterface DetailedERC20:\n    def name() -> String[42]: view\n    def symbol() -> String[20]: view\n    def decimals() -> uint256: view\n\n\ninterface Strategy:\n    def want() -> address: view\n    def vault() -> address: view\n    def isActive() -> bool: view\n    def delegatedAssets() -> uint256: view\n    def estimatedTotalAssets() -> uint256: view\n    def withdraw(_amount: uint256) -> uint256: nonpayable\n    def migrate(_newStrategy: address): nonpayable\n\n\nevent Transfer:\n    sender: indexed(address)\n    receiver: indexed(address)\n    value: uint256\n\n\nevent Approval:\n    owner: indexed(address)\n    spender: indexed(address)\n    value: uint256\n\n\nname: public(String[64])\nsymbol: public(String[32])\ndecimals: public(uint256)\n\nbalanceOf: public(HashMap[address, uint256])\nallowance: public(HashMap[address, HashMap[address, uint256]])\ntotalSupply: public(uint256)\n\ntoken: public(ERC20)\ngovernance: public(address)\nmanagement: public(address)\nguardian: public(address)\npendingGovernance: address\n\nstruct StrategyParams:\n    performanceFee: uint256  # Strategist's fee (basis points)\n    activation: uint256  # Activation block.timestamp\n    debtRatio: uint256  # Maximum borrow amount (in BPS of total assets)\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n    lastReport: uint256  # block.timestamp of the last time a report occured\n    totalDebt: uint256  # Total outstanding debt that Strategy has\n    totalGain: uint256  # Total returns that Strategy has realized for Vault\n    totalLoss: uint256  # Total losses that Strategy has realized for Vault\n\n\nevent StrategyAdded:\n    strategy: indexed(address)\n    debtRatio: uint256  # Maximum borrow amount (in BPS of total assets)\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n    performanceFee: uint256  # Strategist's fee (basis points)\n\n\nevent StrategyReported:\n    strategy: indexed(address)\n    gain: uint256\n    loss: uint256\n    debtPaid: uint256\n    totalGain: uint256\n    totalLoss: uint256\n    totalDebt: uint256\n    debtAdded: uint256\n    debtRatio: uint256\n\n\nevent UpdateGovernance:\n    governance: address # New active governance\n\n\nevent UpdateManagement:\n    management: address # New active manager\n\nevent UpdateRewards:\n    rewards: address # New active rewards recipient\n\n\nevent UpdateDepositLimit:\n    depositLimit: uint256 # New active deposit limit\n\n\nevent UpdatePerformanceFee:\n    performanceFee: uint256 # New active performance fee\n\n\nevent UpdateManagementFee:\n    managementFee: uint256 # New active management fee\n\n\nevent UpdateGuardian:\n    guardian: address # Address of the active guardian\n\n\nevent EmergencyShutdown:\n    active: bool # New emergency shutdown state (if false, normal operation enabled)\n\n\nevent UpdateWithdrawalQueue:\n    queue: address[MAXIMUM_STRATEGIES] # New active withdrawal queue\n\n\nevent StrategyUpdateDebtRatio:\n    strategy: indexed(address) # Address of the strategy for the debt ratio adjustment\n    debtRatio: uint256 # The new debt limit for the strategy (in BPS of total assets)\n\n\nevent StrategyUpdateMinDebtPerHarvest:\n    strategy: indexed(address) # Address of the strategy for the rate limit adjustment\n    minDebtPerHarvest: uint256  # Lower limit on the increase of debt since last harvest\n\n\nevent StrategyUpdateMaxDebtPerHarvest:\n    strategy: indexed(address) # Address of the strategy for the rate limit adjustment\n    maxDebtPerHarvest: uint256  # Upper limit on the increase of debt since last harvest\n\n\nevent StrategyUpdatePerformanceFee:\n    strategy: indexed(address) # Address of the strategy for the performance fee adjustment\n    performanceFee: uint256 # The new performance fee for the strategy\n\n\nevent StrategyMigrated:\n    oldVersion: indexed(address) # Old version of the strategy to be migrated\n    newVersion: indexed(address) # New version of the strategy\n\n\nevent StrategyRevoked:\n    strategy: indexed(address) # Address of the strategy that is revoked\n\n\nevent StrategyRemovedFromQueue:\n    strategy: indexed(address) # Address of the strategy that is removed from the withdrawal queue\n\n\nevent StrategyAddedToQueue:\n    strategy: indexed(address) # Address of the strategy that is added to the withdrawal queue\n\n\n# NOTE: Track the total for overhead targeting purposes\nstrategies: public(HashMap[address, StrategyParams])\nMAXIMUM_STRATEGIES: constant(uint256) = 20\nDEGRADATION_COEFFICIENT: constant(uint256) = 10 ** 18\n\n# Ordering that `withdraw` uses to determine which strategies to pull funds from\n# NOTE: Does *NOT* have to match the ordering of all the current strategies that\n#       exist, but it is recommended that it does or else withdrawal depth is\n#       limited to only those inside the queue.\n# NOTE: Ordering is determined by governance, and should be balanced according\n#       to risk, slippage, and/or volatility. Can also be ordered to increase the\n#       withdrawal speed of a particular Strategy.\n# NOTE: The first time a ZERO_ADDRESS is encountered, it stops withdrawing\nwithdrawalQueue: public(address[MAXIMUM_STRATEGIES])\n\nemergencyShutdown: public(bool)\n\ndepositLimit: public(uint256)  # Limit for totalAssets the Vault can hold\ndebtRatio: public(uint256)  # Debt ratio for the Vault across all strategies (in BPS, <= 10k)\ntotalDebt: public(uint256)  # Amount of tokens that all strategies have borrowed\nlastReport: public(uint256)  # block.timestamp of last report\nactivation: public(uint256)  # block.timestamp of contract deployment\nlockedProfit: public(uint256) # how much profit is locked and cant be withdrawn\nlockedProfitDegradation: public(uint256) # rate per block of degradation. DEGRADATION_COEFFICIENT is 100% per block\nrewards: public(address)  # Rewards contract where Governance fees are sent to\n# Governance Fee for management of Vault (given to `rewards`)\nmanagementFee: public(uint256)\n# Governance Fee for performance of Vault (given to `rewards`)\nperformanceFee: public(uint256)\nMAX_BPS: constant(uint256) = 10_000  # 100%, or 10k basis points\n# NOTE: A four-century period will be missing 3 of its 100 Julian leap years, leaving 97.\n#       So the average year has 365 + 97/400 = 365.2425 days\n#       ERROR(Julian): -0.0078\n#       ERROR(Gregorian): -0.0003\n#       A day = 24 * 60 * 60 sec = 86400 sec\n#       365.2425 * 86400 = 31556952.0\nSECS_PER_YEAR: constant(uint256) = 31_556_952  # 365.2425 days\n# `nonces` track `permit` approvals with signature.\nnonces: public(HashMap[address, uint256])\nDOMAIN_SEPARATOR: public(bytes32)\nDOMAIN_TYPE_HASH: constant(bytes32) = keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)')\nPERMIT_TYPE_HASH: constant(bytes32) = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\")\n\n\n@external\ndef initialize(\n    token: address,\n    governance: address,\n    rewards: address,\n    nameOverride: String[64],\n    symbolOverride: String[32],\n    guardian: address = msg.sender,\n    management: address =  msg.sender,\n):\n    \"\"\"\n    @notice\n        Initializes the Vault, this is called only once, when the contract is\n        deployed.\n        The performance fee is set to 10% of yield, per Strategy.\n        The management fee is set to 2%, per year.\n        The initial deposit limit is set to 0 (deposits disabled); it must be\n        updated after initialization.\n    @dev\n        If `nameOverride` is not specified, the name will be 'yearn'\n        combined with the name of `token`.\n\n        If `symbolOverride` is not specified, the symbol will be 'yv'\n        combined with the symbol of `token`.\n\n        The token used by the vault should not change balances outside transfers and \n        it must transfer the exact amount requested. Fee on transfer and rebasing are not supported.\n    @param token The token that may be deposited into this Vault.\n    @param governance The address authorized for governance interactions.\n    @param rewards The address to distribute rewards to.\n    @param management The address of the vault manager.\n    @param nameOverride Specify a custom Vault name. Leave empty for default choice.\n    @param symbolOverride Specify a custom Vault symbol name. Leave empty for default choice.\n    @param guardian The address authorized for guardian interactions. Defaults to caller.\n    \"\"\"\n    assert self.activation == 0  # dev: no devops199\n    self.token = ERC20(token)\n    if nameOverride == \"\":\n        self.name = concat(DetailedERC20(token).symbol(), \" yVault\")\n    else:\n        self.name = nameOverride\n    if symbolOverride == \"\":\n        self.symbol = concat(\"yv\", DetailedERC20(token).symbol())\n    else:\n        self.symbol = symbolOverride\n    decimals: uint256 = DetailedERC20(token).decimals()\n    self.decimals = decimals\n    assert decimals < 256 # dev: see VVE-2020-0001\n\n    self.governance = governance\n    log UpdateGovernance(governance)\n    self.management = management\n    log UpdateManagement(management)\n    self.rewards = rewards\n    log UpdateRewards(rewards)\n    self.guardian = guardian\n    log UpdateGuardian(guardian)\n    self.performanceFee = 1000  # 10% of yield (per Strategy)\n    log UpdatePerformanceFee(convert(1000, uint256))\n    self.managementFee = 200  # 2% per year\n    log UpdateManagementFee(convert(200, uint256))\n    self.lastReport = block.timestamp\n    self.activation = block.timestamp\n    self.lockedProfitDegradation = convert(DEGRADATION_COEFFICIENT * 46 / 10 ** 6 , uint256) # 6 hours in blocks\n    # EIP-712\n    self.DOMAIN_SEPARATOR = keccak256(\n        concat(\n            DOMAIN_TYPE_HASH,\n            keccak256(convert(\"Yearn Vault\", Bytes[11])),\n            keccak256(convert(API_VERSION, Bytes[28])),\n            convert(chain.id, bytes32),\n            convert(self, bytes32)\n        )\n    )\n\n\n@pure\n@external\ndef apiVersion() -> String[28]:\n    \"\"\"\n    @notice\n        Used to track the deployed version of this contract. In practice you\n        can use this version number to compare with Yearn's GitHub and\n        determine which version of the source matches this deployed contract.\n    @dev\n        All strategies must have an `apiVersion()` that matches the Vault's\n        `API_VERSION`.\n    @return API_VERSION which holds the current version of this contract.\n    \"\"\"\n    return API_VERSION\n\n\n@external\ndef setName(name: String[42]):\n    \"\"\"\n    @notice\n        Used to change the value of `name`.\n\n        This may only be called by governance.\n    @param name The new name to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.name = name\n\n\n@external\ndef setSymbol(symbol: String[20]):\n    \"\"\"\n    @notice\n        Used to change the value of `symbol`.\n\n        This may only be called by governance.\n    @param symbol The new symbol to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.symbol = symbol\n\n\n# 2-phase commit for a change in governance\n@external\ndef setGovernance(governance: address):\n    \"\"\"\n    @notice\n        Nominate a new address to use as governance.\n\n        The change does not go into effect immediately. This function sets a\n        pending change, and the governance address is not updated until\n        the proposed governance address has accepted the responsibility.\n\n        This may only be called by the current governance address.\n    @param governance The address requested to take over Vault governance.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.pendingGovernance = governance\n\n\n@external\ndef acceptGovernance():\n    \"\"\"\n    @notice\n        Once a new governance address has been proposed using setGovernance(),\n        this function may be called by the proposed address to accept the\n        responsibility of taking over governance for this contract.\n\n        This may only be called by the proposed governance address.\n    @dev\n        setGovernance() should be called by the existing governance address,\n        prior to calling this function.\n    \"\"\"\n    assert msg.sender == self.pendingGovernance\n    self.governance = msg.sender\n    log UpdateGovernance(msg.sender)\n\n\n@external\ndef setManagement(management: address):\n    \"\"\"\n    @notice\n        Changes the management address.\n        Management is able to make some investment decisions adjusting parameters.\n\n        This may only be called by governance.\n    @param management The address to use for managing.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.management = management\n    log UpdateManagement(management)\n\n\n@external\ndef setRewards(rewards: address):\n    \"\"\"\n    @notice\n        Changes the rewards address. Any distributed rewards\n        will cease flowing to the old address and begin flowing\n        to this address once the change is in effect.\n\n        This will not change any Strategy reports in progress, only\n        new reports made after this change goes into effect.\n\n        This may only be called by governance.\n    @param rewards The address to use for collecting rewards.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert not (rewards in [self, ZERO_ADDRESS])\n    self.rewards = rewards\n    log UpdateRewards(rewards)\n\n\n@external\ndef setLockedProfitDegradation(degradation: uint256):\n    \"\"\"\n    @notice\n        Changes the locked profit degradation.\n    @param degradation The rate of degradation in percent per second scaled to 1e18.\n    \"\"\"\n    assert msg.sender == self.governance\n    # Since \"degradation\" is of type uint256 it can never be less than zero\n    assert degradation <= DEGRADATION_COEFFICIENT\n    self.lockedProfitDegradation = degradation\n\n\n@external\ndef setDepositLimit(limit: uint256):\n    \"\"\"\n    @notice\n        Changes the maximum amount of tokens that can be deposited in this Vault.\n\n        Note, this is not how much may be deposited by a single depositor,\n        but the maximum amount that may be deposited across all depositors.\n\n        This may only be called by governance.\n    @param limit The new deposit limit to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    self.depositLimit = limit\n    log UpdateDepositLimit(limit)\n\n\n@external\ndef setPerformanceFee(fee: uint256):\n    \"\"\"\n    @notice\n        Used to change the value of `performanceFee`.\n\n        Should set this value below the maximum strategist performance fee.\n\n        This may only be called by governance.\n    @param fee The new performance fee to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert fee <= MAX_BPS / 2\n    self.performanceFee = fee\n    log UpdatePerformanceFee(fee)\n\n\n@external\ndef setManagementFee(fee: uint256):\n    \"\"\"\n    @notice\n        Used to change the value of `managementFee`.\n\n        This may only be called by governance.\n    @param fee The new management fee to use.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert fee <= MAX_BPS\n    self.managementFee = fee\n    log UpdateManagementFee(fee)\n\n\n@external\ndef setGuardian(guardian: address):\n    \"\"\"\n    @notice\n        Used to change the address of `guardian`.\n\n        This may only be called by governance or the existing guardian.\n    @param guardian The new guardian address to use.\n    \"\"\"\n    assert msg.sender in [self.guardian, self.governance]\n    self.guardian = guardian\n    log UpdateGuardian(guardian)\n\n\n@external\ndef setEmergencyShutdown(active: bool):\n    \"\"\"\n    @notice\n        Activates or deactivates Vault mode where all Strategies go into full\n        withdrawal.\n\n        During Emergency Shutdown:\n        1. No Users may deposit into the Vault (but may withdraw as usual.)\n        2. Governance may not add new Strategies.\n        3. Each Strategy must pay back their debt as quickly as reasonable to\n            minimally affect their position.\n        4. Only Governance may undo Emergency Shutdown.\n\n        See contract level note for further details.\n\n        This may only be called by governance or the guardian.\n    @param active\n        If true, the Vault goes into Emergency Shutdown. If false, the Vault\n        goes back into Normal Operation.\n    \"\"\"\n    if active:\n        assert msg.sender in [self.guardian, self.governance]\n    else:\n        assert msg.sender == self.governance\n    self.emergencyShutdown = active\n    log EmergencyShutdown(active)\n\n\n@external\ndef setWithdrawalQueue(queue: address[MAXIMUM_STRATEGIES]):\n    \"\"\"\n    @notice\n        Updates the withdrawalQueue to match the addresses and order specified\n        by `queue`.\n\n        There can be fewer strategies than the maximum, as well as fewer than\n        the total number of strategies active in the vault. `withdrawalQueue`\n        will be updated in a gas-efficient manner, assuming the input is well-\n        ordered with 0x0 only at the end.\n\n        This may only be called by governance or management.\n    @dev\n        This is order sensitive, specify the addresses in the order in which\n        funds should be withdrawn (so `queue`[0] is the first Strategy withdrawn\n        from, `queue`[1] is the second, etc.)\n\n        This means that the least impactful Strategy (the Strategy that will have\n        its core positions impacted the least by having funds removed) should be\n        at `queue`[0], then the next least impactful at `queue`[1], and so on.\n    @param queue\n        The array of addresses to use as the new withdrawal queue. This is\n        order sensitive.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n\n    # HACK: Temporary until Vyper adds support for Dynamic arrays\n    old_queue: address[MAXIMUM_STRATEGIES] = empty(address[MAXIMUM_STRATEGIES])\n    for i in range(MAXIMUM_STRATEGIES):\n        old_queue[i] = self.withdrawalQueue[i] \n        if queue[i] == ZERO_ADDRESS:\n            # NOTE: Cannot use this method to remove entries from the queue\n            assert old_queue[i] == ZERO_ADDRESS\n            break\n        # NOTE: Cannot use this method to add more entries to the queue\n        assert old_queue[i] != ZERO_ADDRESS\n\n        assert self.strategies[queue[i]].activation > 0\n\n        existsInOldQueue: bool = False\n        for j in range(MAXIMUM_STRATEGIES):\n            if queue[j] == ZERO_ADDRESS:\n                existsInOldQueue = True\n                break\n            if queue[i] == old_queue[j]:\n                # NOTE: Ensure that every entry in queue prior to reordering exists now\n                existsInOldQueue = True\n\n            if j <= i:\n                # NOTE: This will only check for duplicate entries in queue after `i`\n                continue\n            assert queue[i] != queue[j]  # dev: do not add duplicate strategies\n\n        assert existsInOldQueue # dev: do not add new strategies\n\n        self.withdrawalQueue[i] = queue[i]\n    log UpdateWithdrawalQueue(queue)\n\n\n@internal\ndef erc20_safe_transfer(token: address, receiver: address, amount: uint256):\n    # Used only to send tokens that are not the type managed by this Vault.\n    # HACK: Used to handle non-compliant tokens like USDT\n    response: Bytes[32] = raw_call(\n        token,\n        concat(\n            method_id(\"transfer(address,uint256)\"),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n@internal\ndef erc20_safe_transferFrom(token: address, sender: address, receiver: address, amount: uint256):\n    # Used only to send tokens that are not the type managed by this Vault.\n    # HACK: Used to handle non-compliant tokens like USDT\n    response: Bytes[32] = raw_call(\n        token,\n        concat(\n            method_id(\"transferFrom(address,address,uint256)\"),\n            convert(sender, bytes32),\n            convert(receiver, bytes32),\n            convert(amount, bytes32),\n        ),\n        max_outsize=32,\n    )\n    if len(response) > 0:\n        assert convert(response, bool), \"Transfer failed!\"\n\n\n@internal\ndef _transfer(sender: address, receiver: address, amount: uint256):\n    # See note on `transfer()`.\n\n    # Protect people from accidentally sending their shares to bad places\n    assert receiver not in [self, ZERO_ADDRESS]\n    self.balanceOf[sender] -= amount\n    self.balanceOf[receiver] += amount\n    log Transfer(sender, receiver, amount)\n\n\n@external\ndef transfer(receiver: address, amount: uint256) -> bool:\n    \"\"\"\n    @notice\n        Transfers shares from the caller's address to `receiver`. This function\n        will always return true, unless the user is attempting to transfer\n        shares to this contract's address, or to 0x0.\n    @param receiver\n        The address shares are being transferred to. Must not be this contract's\n        address, must not be 0x0.\n    @param amount The quantity of shares to transfer.\n    @return\n        True if transfer is sent to an address other than this contract's or\n        0x0, otherwise the transaction will fail.\n    \"\"\"\n    self._transfer(msg.sender, receiver, amount)\n    return True\n\n\n@external\ndef transferFrom(sender: address, receiver: address, amount: uint256) -> bool:\n    \"\"\"\n    @notice\n        Transfers `amount` shares from `sender` to `receiver`. This operation will\n        always return true, unless the user is attempting to transfer shares\n        to this contract's address, or to 0x0.\n\n        Unless the caller has given this contract unlimited approval,\n        transfering shares will decrement the caller's `allowance` by `amount`.\n    @param sender The address shares are being transferred from.\n    @param receiver\n        The address shares are being transferred to. Must not be this contract's\n        address, must not be 0x0.\n    @param amount The quantity of shares to transfer.\n    @return\n        True if transfer is sent to an address other than this contract's or\n        0x0, otherwise the transaction will fail.\n    \"\"\"\n    # Unlimited approval (saves an SSTORE)\n    if (self.allowance[sender][msg.sender] < MAX_UINT256):\n        allowance: uint256 = self.allowance[sender][msg.sender] - amount\n        self.allowance[sender][msg.sender] = allowance\n        # NOTE: Allows log filters to have a full accounting of allowance changes\n        log Approval(sender, msg.sender, allowance)\n    self._transfer(sender, receiver, amount)\n    return True\n\n\n@external\ndef approve(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Approve the passed address to spend the specified amount of tokens on behalf of\n         `msg.sender`. Beware that changing an allowance with this method brings the risk\n         that someone may use both the old and the new allowance by unfortunate transaction\n         ordering. See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to be spent.\n    \"\"\"\n    self.allowance[msg.sender][spender] = amount\n    log Approval(msg.sender, spender, amount)\n    return True\n\n\n@external\ndef increaseAllowance(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Increase the allowance of the passed address to spend the total amount of tokens\n         on behalf of msg.sender. This method mitigates the risk that someone may use both\n         the old and the new allowance by unfortunate transaction ordering.\n         See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to increase the allowance by.\n    \"\"\"\n    self.allowance[msg.sender][spender] += amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef decreaseAllowance(spender: address, amount: uint256) -> bool:\n    \"\"\"\n    @dev Decrease the allowance of the passed address to spend the total amount of tokens\n         on behalf of msg.sender. This method mitigates the risk that someone may use both\n         the old and the new allowance by unfortunate transaction ordering.\n         See https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n    @param spender The address which will spend the funds.\n    @param amount The amount of tokens to decrease the allowance by.\n    \"\"\"\n    self.allowance[msg.sender][spender] -= amount\n    log Approval(msg.sender, spender, self.allowance[msg.sender][spender])\n    return True\n\n\n@external\ndef permit(owner: address, spender: address, amount: uint256, expiry: uint256, signature: Bytes[65]) -> bool:\n    \"\"\"\n    @notice\n        Approves spender by owner's signature to expend owner's tokens.\n        See https://eips.ethereum.org/EIPS/eip-2612.\n\n    @param owner The address which is a source of funds and has signed the Permit.\n    @param spender The address which is allowed to spend the funds.\n    @param amount The amount of tokens to be spent.\n    @param expiry The timestamp after which the Permit is no longer valid.\n    @param signature A valid secp256k1 signature of Permit by owner encoded as r, s, v.\n    @return True, if transaction completes successfully\n    \"\"\"\n    assert owner != ZERO_ADDRESS  # dev: invalid owner\n    assert expiry == 0 or expiry >= block.timestamp  # dev: permit expired\n    nonce: uint256 = self.nonces[owner]\n    digest: bytes32 = keccak256(\n        concat(\n            b'\\x19\\x01',\n            self.DOMAIN_SEPARATOR,\n            keccak256(\n                concat(\n                    PERMIT_TYPE_HASH,\n                    convert(owner, bytes32),\n                    convert(spender, bytes32),\n                    convert(amount, bytes32),\n                    convert(nonce, bytes32),\n                    convert(expiry, bytes32),\n                )\n            )\n        )\n    )\n    # NOTE: signature is packed as r, s, v\n    r: uint256 = convert(slice(signature, 0, 32), uint256)\n    s: uint256 = convert(slice(signature, 32, 32), uint256)\n    v: uint256 = convert(slice(signature, 64, 1), uint256)\n    assert ecrecover(digest, v, r, s) == owner  # dev: invalid signature\n    self.allowance[owner][spender] = amount\n    self.nonces[owner] = nonce + 1\n    log Approval(owner, spender, amount)\n    return True\n\n\n@view\n@internal\ndef _totalAssets() -> uint256:\n    # See note on `totalAssets()`.\n    return self.token.balanceOf(self) + self.totalDebt\n\n\n@view\n@external\ndef totalAssets() -> uint256:\n    \"\"\"\n    @notice\n        Returns the total quantity of all assets under control of this\n        Vault, whether they're loaned out to a Strategy, or currently held in\n        the Vault.\n    @return The total assets under control of this Vault.\n    \"\"\"\n    return self._totalAssets()\n\n\n@view\n@internal\ndef _calculateLockedProfit() -> uint256:\n    lockedFundsRatio: uint256 = (block.timestamp - self.lastReport) * self.lockedProfitDegradation\n\n    if(lockedFundsRatio < DEGRADATION_COEFFICIENT):\n        lockedProfit: uint256 = self.lockedProfit\n        return lockedProfit - (\n                lockedFundsRatio\n                * lockedProfit\n                / DEGRADATION_COEFFICIENT\n            )\n    else:        \n        return 0\n\n@view\n@internal\ndef _freeFunds() -> uint256:\n    return self._totalAssets() - self._calculateLockedProfit()\n\n@internal\ndef _issueSharesForAmount(to: address, amount: uint256) -> uint256:\n    # Issues `amount` Vault shares to `to`.\n    # Shares must be issued prior to taking on new collateral, or\n    # calculation will be wrong. This means that only *trusted* tokens\n    # (with no capability for exploitative behavior) can be used.\n    shares: uint256 = 0\n    # HACK: Saves 2 SLOADs (~200 gas, post-Berlin)\n    totalSupply: uint256 = self.totalSupply\n    if totalSupply > 0:\n        # Mint amount of shares based on what the Vault is managing overall\n        # NOTE: if sqrt(token.totalSupply()) > 1e39, this could potentially revert\n        shares =  amount * totalSupply / self._freeFunds()  # dev: no free funds\n    else:\n        # No existing shares, so mint 1:1\n        shares = amount\n    assert shares != 0 # dev: division rounding resulted in zero\n\n    # Mint new shares\n    self.totalSupply = totalSupply + shares\n    self.balanceOf[to] += shares\n    log Transfer(ZERO_ADDRESS, to, shares)\n\n    return shares\n\n\n@external\n@nonreentrant(\"withdraw\")\ndef deposit(_amount: uint256 = MAX_UINT256, recipient: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Deposits `_amount` `token`, issuing shares to `recipient`. If the\n        Vault is in Emergency Shutdown, deposits will not be accepted and this\n        call will fail.\n    @dev\n        Measuring quantity of shares to issues is based on the total\n        outstanding debt that this contract has (\"expected value\") instead\n        of the total balance sheet it has (\"estimated value\") has important\n        security considerations, and is done intentionally. If this value were\n        measured against external systems, it could be purposely manipulated by\n        an attacker to withdraw more assets than they otherwise should be able\n        to claim by redeeming their shares.\n\n        On deposit, this means that shares are issued against the total amount\n        that the deposited capital can be given in service of the debt that\n        Strategies assume. If that number were to be lower than the \"expected\n        value\" at some future point, depositing shares via this method could\n        entitle the depositor to *less* than the deposited value once the\n        \"realized value\" is updated from further reports by the Strategies\n        to the Vaults.\n\n        Care should be taken by integrators to account for this discrepancy,\n        by using the view-only methods of this contract (both off-chain and\n        on-chain) to determine if depositing into the Vault is a \"good idea\".\n    @param _amount The quantity of tokens to deposit, defaults to all.\n    @param recipient\n        The address to issue the shares in this Vault to. Defaults to the\n        caller's address.\n    @return The issued Vault shares.\n    \"\"\"\n    assert not self.emergencyShutdown  # Deposits are locked out\n    assert recipient not in [self, ZERO_ADDRESS]\n\n    amount: uint256 = _amount\n\n    # If _amount not specified, transfer the full token balance,\n    # up to deposit limit\n    if amount == MAX_UINT256:\n        amount = min(\n            self.depositLimit - self._totalAssets(),\n            self.token.balanceOf(msg.sender),\n        )\n    else:\n        # Ensure deposit limit is respected\n        assert self._totalAssets() + amount <= self.depositLimit\n\n    # Ensure we are depositing something\n    assert amount > 0\n\n    # Issue new shares (needs to be done before taking deposit to be accurate)\n    # Shares are issued to recipient (may be different from msg.sender)\n    # See @dev note, above.\n    shares: uint256 = self._issueSharesForAmount(recipient, amount)\n\n    # Tokens are transferred from msg.sender (may be different from _recipient)\n    self.erc20_safe_transferFrom(self.token.address, msg.sender, self, amount)\n\n    return shares  # Just in case someone wants them\n\n\n@view\n@internal\ndef _shareValue(shares: uint256) -> uint256:\n    # Returns price = 1:1 if vault is empty\n    if self.totalSupply == 0:\n        return shares\n\n    # Determines the current value of `shares`.\n    # NOTE: if sqrt(Vault.totalAssets()) >>> 1e39, this could potentially revert\n\n    return (\n        shares\n        * self._freeFunds()\n        / self.totalSupply\n    )\n\n\n@view\n@internal\ndef _sharesForAmount(amount: uint256) -> uint256:\n    # Determines how many shares `amount` of token would receive.\n    # See dev note on `deposit`.\n    _freeFunds: uint256 = self._freeFunds()\n    if _freeFunds > 0:\n        # NOTE: if sqrt(token.totalSupply()) > 1e37, this could potentially revert\n        return  (\n            amount\n            * self.totalSupply\n            / _freeFunds \n        )\n    else:\n        return 0\n\n\n@view\n@external\ndef maxAvailableShares() -> uint256:\n    \"\"\"\n    @notice\n        Determines the maximum quantity of shares this Vault can facilitate a\n        withdrawal for, factoring in assets currently residing in the Vault,\n        as well as those deployed to strategies on the Vault's balance sheet.\n    @dev\n        Regarding how shares are calculated, see dev note on `deposit`.\n\n        If you want to calculated the maximum a user could withdraw up to,\n        you want to use this function.\n\n        Note that the amount provided by this function is the theoretical\n        maximum possible from withdrawing, the real amount depends on the\n        realized losses incurred during withdrawal.\n    @return The total quantity of shares this Vault can provide.\n    \"\"\"\n    shares: uint256 = self._sharesForAmount(self.token.balanceOf(self))\n\n    for strategy in self.withdrawalQueue:\n        if strategy == ZERO_ADDRESS:\n            break\n        shares += self._sharesForAmount(self.strategies[strategy].totalDebt)\n\n    return shares\n\n\n@internal\ndef _reportLoss(strategy: address, loss: uint256):\n    # Loss can only be up the amount of debt issued to strategy\n    totalDebt: uint256 = self.strategies[strategy].totalDebt\n    assert totalDebt >= loss\n\n    # Also, make sure we reduce our trust with the strategy by the amount of loss\n    if self.debtRatio != 0: # if vault with single strategy that is set to EmergencyOne\n        # NOTE: The context to this calculation is different than the calculation in `_reportLoss`,\n        # this calculation intentionally approximates via `totalDebt` to avoid manipulatable results\n        ratio_change: uint256 = min(\n            # NOTE: This calculation isn't 100% precise, the adjustment is ~10%-20% more severe due to EVM math\n            loss * self.debtRatio / self.totalDebt,\n            self.strategies[strategy].debtRatio,\n        )\n        self.strategies[strategy].debtRatio -= ratio_change\n        self.debtRatio -= ratio_change\n    # Finally, adjust our strategy's parameters by the loss\n    self.strategies[strategy].totalLoss += loss\n    self.strategies[strategy].totalDebt = totalDebt - loss\n    self.totalDebt -= loss\n\n\n@external\n@nonreentrant(\"withdraw\")\ndef withdraw(\n    maxShares: uint256 = MAX_UINT256,\n    recipient: address = msg.sender,\n    maxLoss: uint256 = 1,  # 0.01% [BPS]\n) -> uint256:\n    \"\"\"\n    @notice\n        Withdraws the calling account's tokens from this Vault, redeeming\n        amount `_shares` for an appropriate amount of tokens.\n\n        See note on `setWithdrawalQueue` for further details of withdrawal\n        ordering and behavior.\n    @dev\n        Measuring the value of shares is based on the total outstanding debt\n        that this contract has (\"expected value\") instead of the total balance\n        sheet it has (\"estimated value\") has important security considerations,\n        and is done intentionally. If this value were measured against external\n        systems, it could be purposely manipulated by an attacker to withdraw\n        more assets than they otherwise should be able to claim by redeeming\n        their shares.\n\n        On withdrawal, this means that shares are redeemed against the total\n        amount that the deposited capital had \"realized\" since the point it\n        was deposited, up until the point it was withdrawn. If that number\n        were to be higher than the \"expected value\" at some future point,\n        withdrawing shares via this method could entitle the depositor to\n        *more* than the expected value once the \"realized value\" is updated\n        from further reports by the Strategies to the Vaults.\n\n        Under exceptional scenarios, this could cause earlier withdrawals to\n        earn \"more\" of the underlying assets than Users might otherwise be\n        entitled to, if the Vault's estimated value were otherwise measured\n        through external means, accounting for whatever exceptional scenarios\n        exist for the Vault (that aren't covered by the Vault's own design.)\n\n        In the situation where a large withdrawal happens, it can empty the \n        vault balance and the strategies in the withdrawal queue. \n        Strategies not in the withdrawal queue will have to be harvested to \n        rebalance the funds and make the funds available again to withdraw.\n    @param maxShares\n        How many shares to try and redeem for tokens, defaults to all.\n    @param recipient\n        The address to issue the shares in this Vault to. Defaults to the\n        caller's address.\n    @param maxLoss\n        The maximum acceptable loss to sustain on withdrawal. Defaults to 0.01%.\n        If a loss is specified, up to that amount of shares may be burnt to cover losses on withdrawal.\n    @return The quantity of tokens redeemed for `_shares`.\n    \"\"\"\n    shares: uint256 = maxShares  # May reduce this number below\n\n    # Max Loss is <=100%, revert otherwise\n    assert maxLoss <= MAX_BPS\n\n    # If _shares not specified, transfer full share balance\n    if shares == MAX_UINT256:\n        shares = self.balanceOf[msg.sender]\n\n    # Limit to only the shares they own\n    assert shares <= self.balanceOf[msg.sender]\n\n    # Ensure we are withdrawing something\n    assert shares > 0\n\n    # See @dev note, above.\n    value: uint256 = self._shareValue(shares)\n\n    if value > self.token.balanceOf(self):\n        totalLoss: uint256 = 0\n        # We need to go get some from our strategies in the withdrawal queue\n        # NOTE: This performs forced withdrawals from each Strategy. During\n        #       forced withdrawal, a Strategy may realize a loss. That loss\n        #       is reported back to the Vault, and the will affect the amount\n        #       of tokens that the withdrawer receives for their shares. They\n        #       can optionally specify the maximum acceptable loss (in BPS)\n        #       to prevent excessive losses on their withdrawals (which may\n        #       happen in certain edge cases where Strategies realize a loss)\n        for strategy in self.withdrawalQueue:\n            if strategy == ZERO_ADDRESS:\n                break  # We've exhausted the queue\n\n            vault_balance: uint256 = self.token.balanceOf(self)\n            if value <= vault_balance:\n                break  # We're done withdrawing\n\n            amountNeeded: uint256 = value - vault_balance\n\n            # NOTE: Don't withdraw more than the debt so that Strategy can still\n            #       continue to work based on the profits it has\n            # NOTE: This means that user will lose out on any profits that each\n            #       Strategy in the queue would return on next harvest, benefiting others\n            amountNeeded = min(amountNeeded, self.strategies[strategy].totalDebt)\n            if amountNeeded == 0:\n                continue  # Nothing to withdraw from this Strategy, try the next one\n\n            # Force withdraw amount from each Strategy in the order set by governance\n            loss: uint256 = Strategy(strategy).withdraw(amountNeeded)\n            withdrawn: uint256 = self.token.balanceOf(self) - vault_balance\n\n            # NOTE: Withdrawer incurs any losses from liquidation\n            if loss > 0:\n                value -= loss\n                totalLoss += loss\n                self._reportLoss(strategy, loss)\n\n            # Reduce the Strategy's debt by the amount withdrawn (\"realized returns\")\n            # NOTE: This doesn't add to returns as it's not earned by \"normal means\"\n            self.strategies[strategy].totalDebt -= withdrawn\n            self.totalDebt -= withdrawn\n\n        # NOTE: We have withdrawn everything possible out of the withdrawal queue\n        #       but we still don't have enough to fully pay them back, so adjust\n        #       to the total amount we've freed up through forced withdrawals\n        vault_balance: uint256 = self.token.balanceOf(self)\n        if value > vault_balance:\n            value = vault_balance\n            # NOTE: Burn # of shares that corresponds to what Vault has on-hand,\n            #       including the losses that were incurred above during withdrawals\n            shares = self._sharesForAmount(value + totalLoss)\n\n        # NOTE: This loss protection is put in place to revert if losses from\n        #       withdrawing are more than what is considered acceptable.\n        assert totalLoss <= maxLoss * (value + totalLoss) / MAX_BPS\n\n    # Burn shares (full value of what is being withdrawn)\n    self.totalSupply -= shares\n    self.balanceOf[msg.sender] -= shares\n    log Transfer(msg.sender, ZERO_ADDRESS, shares)\n\n    # Withdraw remaining balance to _recipient (may be different to msg.sender) (minus fee)\n    self.erc20_safe_transfer(self.token.address, recipient, value)\n\n    return value\n\n\n@view\n@external\ndef pricePerShare() -> uint256:\n    \"\"\"\n    @notice Gives the price for a single Vault share.\n    @dev See dev note on `withdraw`.\n    @return The value of a single share.\n    \"\"\"\n    return self._shareValue(10 ** self.decimals)\n\n\n@internal\ndef _organizeWithdrawalQueue():\n    # Reorganize `withdrawalQueue` based on premise that if there is an\n    # empty value between two actual values, then the empty value should be\n    # replaced by the later value.\n    # NOTE: Relative ordering of non-zero values is maintained.\n    offset: uint256 = 0\n    for idx in range(MAXIMUM_STRATEGIES):\n        strategy: address = self.withdrawalQueue[idx]\n        if strategy == ZERO_ADDRESS:\n            offset += 1  # how many values we need to shift, always `<= idx`\n        elif offset > 0:\n            self.withdrawalQueue[idx - offset] = strategy\n            self.withdrawalQueue[idx] = ZERO_ADDRESS\n\n\n@external\ndef addStrategy(\n    strategy: address,\n    debtRatio: uint256,\n    minDebtPerHarvest: uint256,\n    maxDebtPerHarvest: uint256,\n    performanceFee: uint256,\n):\n    \"\"\"\n    @notice\n        Add a Strategy to the Vault.\n\n        This may only be called by governance.\n    @dev\n        The Strategy will be appended to `withdrawalQueue`, call\n        `setWithdrawalQueue` to change the order.\n    @param strategy The address of the Strategy to add.\n    @param debtRatio\n        The share of the total assets in the `vault that the `strategy` has access to.\n    @param minDebtPerHarvest\n        Lower limit on the increase of debt since last harvest\n    @param maxDebtPerHarvest\n        Upper limit on the increase of debt since last harvest\n    @param performanceFee\n        The fee the strategist will receive based on this Vault's performance.\n    \"\"\"\n    # Check if queue is full\n    assert self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] == ZERO_ADDRESS\n\n    # Check calling conditions\n    assert not self.emergencyShutdown\n    assert msg.sender == self.governance\n\n    # Check strategy configuration\n    assert strategy != ZERO_ADDRESS\n    assert self.strategies[strategy].activation == 0\n    assert self == Strategy(strategy).vault()\n    assert self.token.address == Strategy(strategy).want()\n\n    # Check strategy parameters\n    assert self.debtRatio + debtRatio <= MAX_BPS\n    assert minDebtPerHarvest <= maxDebtPerHarvest\n    assert performanceFee <= MAX_BPS / 2 \n\n    # Add strategy to approved strategies\n    self.strategies[strategy] = StrategyParams({\n        performanceFee: performanceFee,\n        activation: block.timestamp,\n        debtRatio: debtRatio,\n        minDebtPerHarvest: minDebtPerHarvest,\n        maxDebtPerHarvest: maxDebtPerHarvest,\n        lastReport: block.timestamp,\n        totalDebt: 0,\n        totalGain: 0,\n        totalLoss: 0,\n    })\n    log StrategyAdded(strategy, debtRatio, minDebtPerHarvest, maxDebtPerHarvest, performanceFee)\n\n    # Update Vault parameters\n    self.debtRatio += debtRatio\n\n    # Add strategy to the end of the withdrawal queue\n    self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] = strategy\n    self._organizeWithdrawalQueue()\n\n\n@external\ndef updateStrategyDebtRatio(\n    strategy: address,\n    debtRatio: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity of assets `strategy` may manage.\n\n        This may be called by governance or management.\n    @param strategy The Strategy to update.\n    @param debtRatio The quantity of assets `strategy` may now manage.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    self.debtRatio -= self.strategies[strategy].debtRatio\n    self.strategies[strategy].debtRatio = debtRatio\n    self.debtRatio += debtRatio\n    assert self.debtRatio <= MAX_BPS\n    log StrategyUpdateDebtRatio(strategy, debtRatio)\n\n\n@external\ndef updateStrategyMinDebtPerHarvest(\n    strategy: address,\n    minDebtPerHarvest: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity assets per block this Vault may deposit to or\n        withdraw from `strategy`.\n\n        This may only be called by governance or management.\n    @param strategy The Strategy to update.\n    @param minDebtPerHarvest\n        Lower limit on the increase of debt since last harvest\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    assert self.strategies[strategy].maxDebtPerHarvest >= minDebtPerHarvest\n    self.strategies[strategy].minDebtPerHarvest = minDebtPerHarvest\n    log StrategyUpdateMinDebtPerHarvest(strategy, minDebtPerHarvest)\n\n\n@external\ndef updateStrategyMaxDebtPerHarvest(\n    strategy: address,\n    maxDebtPerHarvest: uint256,\n):\n    \"\"\"\n    @notice\n        Change the quantity assets per block this Vault may deposit to or\n        withdraw from `strategy`.\n\n        This may only be called by governance or management.\n    @param strategy The Strategy to update.\n    @param maxDebtPerHarvest\n        Upper limit on the increase of debt since last harvest\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    assert self.strategies[strategy].activation > 0\n    assert self.strategies[strategy].minDebtPerHarvest <= maxDebtPerHarvest\n    self.strategies[strategy].maxDebtPerHarvest = maxDebtPerHarvest\n    log StrategyUpdateMaxDebtPerHarvest(strategy, maxDebtPerHarvest)\n\n\n@external\ndef updateStrategyPerformanceFee(\n    strategy: address,\n    performanceFee: uint256,\n):\n    \"\"\"\n    @notice\n        Change the fee the strategist will receive based on this Vault's\n        performance.\n\n        This may only be called by governance.\n    @param strategy The Strategy to update.\n    @param performanceFee The new fee the strategist will receive.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert performanceFee <= MAX_BPS / 2\n    assert self.strategies[strategy].activation > 0\n    self.strategies[strategy].performanceFee = performanceFee\n    log StrategyUpdatePerformanceFee(strategy, performanceFee)\n\n\n@internal\ndef _revokeStrategy(strategy: address):\n    self.debtRatio -= self.strategies[strategy].debtRatio\n    self.strategies[strategy].debtRatio = 0\n    log StrategyRevoked(strategy)\n\n\n@external\ndef migrateStrategy(oldVersion: address, newVersion: address):\n    \"\"\"\n    @notice\n        Migrates a Strategy, including all assets from `oldVersion` to\n        `newVersion`.\n\n        This may only be called by governance.\n    @dev\n        Strategy must successfully migrate all capital and positions to new\n        Strategy, or else this will upset the balance of the Vault.\n\n        The new Strategy should be \"empty\" e.g. have no prior commitments to\n        this Vault, otherwise it could have issues.\n    @param oldVersion The existing Strategy to migrate from.\n    @param newVersion The new Strategy to migrate to.\n    \"\"\"\n    assert msg.sender == self.governance\n    assert newVersion != ZERO_ADDRESS\n    assert self.strategies[oldVersion].activation > 0\n    assert self.strategies[newVersion].activation == 0\n\n    strategy: StrategyParams = self.strategies[oldVersion]\n\n    self._revokeStrategy(oldVersion)\n    # _revokeStrategy will lower the debtRatio\n    self.debtRatio += strategy.debtRatio\n    # Debt is migrated to new strategy\n    self.strategies[oldVersion].totalDebt = 0\n\n    self.strategies[newVersion] = StrategyParams({\n        performanceFee: strategy.performanceFee,\n        # NOTE: use last report for activation time, so E[R] calc works\n        activation: strategy.lastReport,\n        debtRatio: strategy.debtRatio,\n        minDebtPerHarvest: strategy.minDebtPerHarvest,\n        maxDebtPerHarvest: strategy.maxDebtPerHarvest,\n        lastReport: strategy.lastReport,\n        totalDebt: strategy.totalDebt,\n        totalGain: 0,\n        totalLoss: 0,\n    })\n\n    Strategy(oldVersion).migrate(newVersion)\n    log StrategyMigrated(oldVersion, newVersion)\n\n    for idx in range(MAXIMUM_STRATEGIES):\n        if self.withdrawalQueue[idx] == oldVersion:\n            self.withdrawalQueue[idx] = newVersion\n            return  # Don't need to reorder anything because we swapped\n\n\n@external\ndef revokeStrategy(strategy: address = msg.sender):\n    \"\"\"\n    @notice\n        Revoke a Strategy, setting its debt limit to 0 and preventing any\n        future deposits.\n\n        This function should only be used in the scenario where the Strategy is\n        being retired but no migration of the positions are possible, or in the\n        extreme scenario that the Strategy needs to be put into \"Emergency Exit\"\n        mode in order for it to exit as quickly as possible. The latter scenario\n        could be for any reason that is considered \"critical\" that the Strategy\n        exits its position as fast as possible, such as a sudden change in market\n        conditions leading to losses, or an imminent failure in an external\n        dependency.\n\n        This may only be called by governance, the guardian, or the Strategy\n        itself. Note that a Strategy will only revoke itself during emergency\n        shutdown.\n    @param strategy The Strategy to revoke.\n    \"\"\"\n    assert msg.sender in [strategy, self.governance, self.guardian]\n    assert self.strategies[strategy].debtRatio != 0 # dev: already zero\n\n    self._revokeStrategy(strategy)\n\n\n@external\ndef addStrategyToQueue(strategy: address):\n    \"\"\"\n    @notice\n        Adds `strategy` to `withdrawalQueue`.\n\n        This may only be called by governance or management.\n    @dev\n        The Strategy will be appended to `withdrawalQueue`, call\n        `setWithdrawalQueue` to change the order.\n    @param strategy The Strategy to add.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    # Must be a current Strategy\n    assert self.strategies[strategy].activation > 0\n    # Can't already be in the queue\n    last_idx: uint256 = 0\n    for s in self.withdrawalQueue:\n        if s == ZERO_ADDRESS:\n            break\n        assert s != strategy\n        last_idx += 1\n    # Check if queue is full\n    assert last_idx < MAXIMUM_STRATEGIES\n\n    self.withdrawalQueue[MAXIMUM_STRATEGIES - 1] = strategy\n    self._organizeWithdrawalQueue()\n    log StrategyAddedToQueue(strategy)\n\n\n@external\ndef removeStrategyFromQueue(strategy: address):\n    \"\"\"\n    @notice\n        Remove `strategy` from `withdrawalQueue`.\n\n        This may only be called by governance or management.\n    @dev\n        We don't do this with revokeStrategy because it should still\n        be possible to withdraw from the Strategy if it's unwinding.\n    @param strategy The Strategy to remove.\n    \"\"\"\n    assert msg.sender in [self.management, self.governance]\n    for idx in range(MAXIMUM_STRATEGIES):\n        if self.withdrawalQueue[idx] == strategy:\n            self.withdrawalQueue[idx] = ZERO_ADDRESS\n            self._organizeWithdrawalQueue()\n            log StrategyRemovedFromQueue(strategy)\n            return  # We found the right location and cleared it\n    raise  # We didn't find the Strategy in the queue\n\n\n@view\n@internal\ndef _debtOutstanding(strategy: address) -> uint256:\n    # See note on `debtOutstanding()`.\n    if self.debtRatio == 0:\n        return self.strategies[strategy].totalDebt\n\n    strategy_debtLimit: uint256 = (\n        self.strategies[strategy].debtRatio\n        * self._totalAssets()\n        / MAX_BPS\n    )\n    strategy_totalDebt: uint256 = self.strategies[strategy].totalDebt\n\n    if self.emergencyShutdown:\n        return strategy_totalDebt\n    elif strategy_totalDebt <= strategy_debtLimit:\n        return 0\n    else:\n        return strategy_totalDebt - strategy_debtLimit\n\n\n@view\n@external\ndef debtOutstanding(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Determines if `strategy` is past its debt limit and if any tokens\n        should be withdrawn to the Vault.\n    @param strategy The Strategy to check. Defaults to the caller.\n    @return The quantity of tokens to withdraw.\n    \"\"\"\n    return self._debtOutstanding(strategy)\n\n\n@view\n@internal\ndef _creditAvailable(strategy: address) -> uint256:\n    # See note on `creditAvailable()`.\n    if self.emergencyShutdown:\n        return 0\n    vault_totalAssets: uint256 = self._totalAssets()\n    vault_debtLimit: uint256 =  self.debtRatio * vault_totalAssets / MAX_BPS \n    vault_totalDebt: uint256 = self.totalDebt\n    strategy_debtLimit: uint256 = self.strategies[strategy].debtRatio * vault_totalAssets / MAX_BPS\n    strategy_totalDebt: uint256 = self.strategies[strategy].totalDebt\n    strategy_minDebtPerHarvest: uint256 = self.strategies[strategy].minDebtPerHarvest\n    strategy_maxDebtPerHarvest: uint256 = self.strategies[strategy].maxDebtPerHarvest\n\n    # Exhausted credit line\n    if strategy_debtLimit <= strategy_totalDebt or vault_debtLimit <= vault_totalDebt:\n        return 0\n\n    # Start with debt limit left for the Strategy\n    available: uint256 = strategy_debtLimit - strategy_totalDebt\n\n    # Adjust by the global debt limit left\n    available = min(available, vault_debtLimit - vault_totalDebt)\n\n    # Can only borrow up to what the contract has in reserve\n    # NOTE: Running near 100% is discouraged\n    available = min(available, self.token.balanceOf(self))\n\n    # Adjust by min and max borrow limits (per harvest)\n    # NOTE: min increase can be used to ensure that if a strategy has a minimum\n    #       amount of capital needed to purchase a position, it's not given capital\n    #       it can't make use of yet.\n    # NOTE: max increase is used to make sure each harvest isn't bigger than what\n    #       is authorized. This combined with adjusting min and max periods in\n    #       `BaseStrategy` can be used to effect a \"rate limit\" on capital increase.\n    if available < strategy_minDebtPerHarvest:\n        return 0\n    else:\n        return min(available, strategy_maxDebtPerHarvest)\n\n@view\n@external\ndef creditAvailable(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Amount of tokens in Vault a Strategy has access to as a credit line.\n\n        This will check the Strategy's debt limit, as well as the tokens\n        available in the Vault, and determine the maximum amount of tokens\n        (if any) the Strategy may draw on.\n\n        In the rare case the Vault is in emergency shutdown this will return 0.\n    @param strategy The Strategy to check. Defaults to caller.\n    @return The quantity of tokens available for the Strategy to draw on.\n    \"\"\"\n    return self._creditAvailable(strategy)\n\n\n@view\n@internal\ndef _expectedReturn(strategy: address) -> uint256:\n    # See note on `expectedReturn()`.\n    strategy_lastReport: uint256 = self.strategies[strategy].lastReport\n    timeSinceLastHarvest: uint256 = block.timestamp - strategy_lastReport\n    totalHarvestTime: uint256 = strategy_lastReport - self.strategies[strategy].activation\n\n    # NOTE: If either `timeSinceLastHarvest` or `totalHarvestTime` is 0, we can short-circuit to `0`\n    if timeSinceLastHarvest > 0 and totalHarvestTime > 0 and Strategy(strategy).isActive():\n        # NOTE: Unlikely to throw unless strategy accumalates >1e68 returns\n        # NOTE: Calculate average over period of time where harvests have occured in the past\n        return (\n            self.strategies[strategy].totalGain\n            * timeSinceLastHarvest\n            / totalHarvestTime\n        )\n    else:\n        return 0  # Covers the scenario when block.timestamp == activation\n\n\n@view\n@external\ndef availableDepositLimit() -> uint256:\n    if self.depositLimit > self._totalAssets():\n        return self.depositLimit - self._totalAssets()\n    else:\n        return 0\n\n\n@view\n@external\ndef expectedReturn(strategy: address = msg.sender) -> uint256:\n    \"\"\"\n    @notice\n        Provide an accurate expected value for the return this `strategy`\n        would provide to the Vault the next time `report()` is called\n        (since the last time it was called).\n    @param strategy The Strategy to determine the expected return for. Defaults to caller.\n    @return\n        The anticipated amount `strategy` should make on its investment\n        since its last report.\n    \"\"\"\n    return self._expectedReturn(strategy)\n\n\n@internal\ndef _assessFees(strategy: address, gain: uint256) -> uint256:\n    # Issue new shares to cover fees\n    # NOTE: In effect, this reduces overall share price by the combined fee\n    # NOTE: may throw if Vault.totalAssets() > 1e64, or not called for more than a year\n    duration: uint256 = block.timestamp - self.strategies[strategy].lastReport\n    assert duration != 0 # can't assessFees twice within the same block\n\n    if gain == 0:\n        # NOTE: The fees are not charged if there hasn't been any gains reported\n        return 0\n\n    management_fee: uint256 = (\n        (\n            (self.strategies[strategy].totalDebt - Strategy(strategy).delegatedAssets())\n            * duration \n            * self.managementFee\n        )\n        / MAX_BPS\n        / SECS_PER_YEAR\n    )\n\n    # NOTE: Applies if Strategy is not shutting down, or it is but all debt paid off\n    # NOTE: No fee is taken when a Strategy is unwinding it's position, until all debt is paid\n    strategist_fee: uint256 = (\n        gain\n        * self.strategies[strategy].performanceFee\n        / MAX_BPS\n    )\n    # NOTE: Unlikely to throw unless strategy reports >1e72 harvest profit\n    performance_fee: uint256 = gain * self.performanceFee / MAX_BPS\n\n    # NOTE: This must be called prior to taking new collateral,\n    #       or the calculation will be wrong!\n    # NOTE: This must be done at the same time, to ensure the relative\n    #       ratio of governance_fee : strategist_fee is kept intact\n    total_fee: uint256 = performance_fee + strategist_fee + management_fee\n    # ensure total_fee is not more than gain\n    if total_fee > gain:\n        total_fee = gain\n    if total_fee > 0:  # NOTE: If mgmt fee is 0% and no gains were realized, skip\n        reward: uint256 = self._issueSharesForAmount(self, total_fee)\n\n        # Send the rewards out as new shares in this Vault\n        if strategist_fee > 0:  # NOTE: Guard against DIV/0 fault\n            # NOTE: Unlikely to throw unless sqrt(reward) >>> 1e39\n            strategist_reward: uint256 = (\n                strategist_fee\n                * reward\n                / total_fee\n            )\n            self._transfer(self, strategy, strategist_reward)\n            # NOTE: Strategy distributes rewards at the end of harvest()\n        # NOTE: Governance earns any dust leftover from flooring math above\n        if self.balanceOf[self] > 0:\n            self._transfer(self, self.rewards, self.balanceOf[self])\n    return total_fee\n\n\n@external\ndef report(gain: uint256, loss: uint256, _debtPayment: uint256) -> uint256:\n    \"\"\"\n    @notice\n        Reports the amount of assets the calling Strategy has free (usually in\n        terms of ROI).\n\n        The performance fee is determined here, off of the strategy's profits\n        (if any), and sent to governance.\n\n        The strategist's fee is also determined here (off of profits), to be\n        handled according to the strategist on the next harvest.\n\n        This may only be called by a Strategy managed by this Vault.\n    @dev\n        For approved strategies, this is the most efficient behavior.\n        The Strategy reports back what it has free, then Vault \"decides\"\n        whether to take some back or give it more. Note that the most it can\n        take is `gain + _debtPayment`, and the most it can give is all of the\n        remaining reserves. Anything outside of those bounds is abnormal behavior.\n\n        All approved strategies must have increased diligence around\n        calling this function, as abnormal behavior could become catastrophic.\n    @param gain\n        Amount Strategy has realized as a gain on it's investment since its\n        last report, and is free to be given back to Vault as earnings\n    @param loss\n        Amount Strategy has realized as a loss on it's investment since its\n        last report, and should be accounted for on the Vault's balance sheet.\n        The loss will reduce the debtRatio. The next time the strategy will harvest,\n        it will pay back the debt in an attempt to adjust to the new debt limit.\n    @param _debtPayment\n        Amount Strategy has made available to cover outstanding debt\n    @return Amount of debt outstanding (if totalDebt > debtLimit or emergency shutdown).\n    \"\"\"\n\n    # Only approved strategies can call this function\n    assert self.strategies[msg.sender].activation > 0\n    # No lying about total available to withdraw!\n    assert self.token.balanceOf(msg.sender) >= gain + _debtPayment\n\n    # We have a loss to report, do it before the rest of the calculations\n    if loss > 0:\n        self._reportLoss(msg.sender, loss)\n\n    # Assess both management fee and performance fee, and issue both as shares of the vault\n    totalFees: uint256 = self._assessFees(msg.sender, gain)\n\n    # Returns are always \"realized gains\"\n    self.strategies[msg.sender].totalGain += gain\n\n    # Compute the line of credit the Vault is able to offer the Strategy (if any)\n    credit: uint256 = self._creditAvailable(msg.sender)\n\n    # Outstanding debt the Strategy wants to take back from the Vault (if any)\n    # NOTE: debtOutstanding <= StrategyParams.totalDebt\n    debt: uint256 = self._debtOutstanding(msg.sender)\n    debtPayment: uint256 = min(_debtPayment, debt)\n\n    if debtPayment > 0:\n        self.strategies[msg.sender].totalDebt -= debtPayment\n        self.totalDebt -= debtPayment\n        debt -= debtPayment\n        # NOTE: `debt` is being tracked for later\n\n    # Update the actual debt based on the full credit we are extending to the Strategy\n    # or the returns if we are taking funds back\n    # NOTE: credit + self.strategies[msg.sender].totalDebt is always < self.debtLimit\n    # NOTE: At least one of `credit` or `debt` is always 0 (both can be 0)\n    if credit > 0:\n        self.strategies[msg.sender].totalDebt += credit\n        self.totalDebt += credit\n\n    # Give/take balance to Strategy, based on the difference between the reported gains\n    # (if any), the debt payment (if any), the credit increase we are offering (if any),\n    # and the debt needed to be paid off (if any)\n    # NOTE: This is just used to adjust the balance of tokens between the Strategy and\n    #       the Vault based on the Strategy's debt limit (as well as the Vault's).\n    totalAvail: uint256 = gain + debtPayment\n    if totalAvail < credit:  # credit surplus, give to Strategy\n        self.erc20_safe_transfer(self.token.address, msg.sender, credit - totalAvail)\n    elif totalAvail > credit:  # credit deficit, take from Strategy\n        self.erc20_safe_transferFrom(self.token.address, msg.sender, self, totalAvail - credit)\n    # else, don't do anything because it is balanced\n\n    # Profit is locked and gradually released per block\n    # NOTE: compute current locked profit and replace with sum of current and new\n    lockedProfitBeforeLoss: uint256 = self._calculateLockedProfit() + gain - totalFees\n    if lockedProfitBeforeLoss > loss: \n        self.lockedProfit = lockedProfitBeforeLoss - loss\n    else:\n        self.lockedProfit = 0\n\n    # Update reporting time\n    self.strategies[msg.sender].lastReport = block.timestamp\n    self.lastReport = block.timestamp\n\n    log StrategyReported(\n        msg.sender,\n        gain,\n        loss,\n        debtPayment,\n        self.strategies[msg.sender].totalGain,\n        self.strategies[msg.sender].totalLoss,\n        self.strategies[msg.sender].totalDebt,\n        credit,\n        self.strategies[msg.sender].debtRatio,\n    )\n\n    if self.strategies[msg.sender].debtRatio == 0 or self.emergencyShutdown:\n        # Take every last penny the Strategy has (Emergency Exit/revokeStrategy)\n        # NOTE: This is different than `debt` in order to extract *all* of the returns\n        return Strategy(msg.sender).estimatedTotalAssets()\n    else:\n        # Otherwise, just return what we have as debt outstanding\n        return debt\n\n\n@external\ndef sweep(token: address, amount: uint256 = MAX_UINT256):\n    \"\"\"\n    @notice\n        Removes tokens from this Vault that are not the type of token managed\n        by this Vault. This may be used in case of accidentally sending the\n        wrong kind of token to this Vault.\n\n        Tokens will be sent to `governance`.\n\n        This will fail if an attempt is made to sweep the tokens that this\n        Vault manages.\n\n        This may only be called by governance.\n    @param token The token to transfer out of this vault.\n    @param amount The quantity or tokenId to transfer out.\n    \"\"\"\n    assert msg.sender == self.governance\n    # Can't be used to steal what this Vault is protecting\n    assert token != self.token.address\n    value: uint256 = amount\n    if value == MAX_UINT256:\n        value = ERC20(token).balanceOf(self)\n    self.erc20_safe_transfer(token, self.governance, value)\n",
  "sourceMap": "",
  "sourcePath": "contracts/Vault.vy",
  "type": "contract"
}